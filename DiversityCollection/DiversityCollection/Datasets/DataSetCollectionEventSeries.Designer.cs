//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DiversityCollection.Datasets {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetCollectionEventSeries")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetCollectionEventSeries : global::System.Data.DataSet {
        
        private CollectionEventSeriesDataTable tableCollectionEventSeries;
        
        private CollectionEventSeriesImageDataTable tableCollectionEventSeriesImage;
        
        private CollectionEventSeriesDescriptorDataTable tableCollectionEventSeriesDescriptor;
        
        private CollectionEventListDataTable tableCollectionEventList;
        
        private CollectionSpecimenListDataTable tableCollectionSpecimenList;
        
        private IdentificationUnitListDataTable tableIdentificationUnitList;
        
        private CollectionEventLocalisationListDataTable tableCollectionEventLocalisationList;
        
        private CollectionEventSeriesGeographyDataTable tableCollectionEventSeriesGeography;
        
        private global::System.Data.DataRelation relationCollectionEvent_CollectionSpecimen;
        
        private global::System.Data.DataRelation relationCollectionSpecimen_IdentificationUnit;
        
        private global::System.Data.DataRelation relationCollectionEventLocalisation_CollectionEventList;
        
        private global::System.Data.DataRelation relationFK_CollectionEventSeriesImage_CollectionEventSeries;
        
        private global::System.Data.DataRelation relationCollectionEventSeries_CollectionEvent;
        
        private global::System.Data.DataRelation relationFK_CollectionEventSeries_CollectionEventSeries;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DataSetCollectionEventSeries() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
            " or extended by application code.", DiagnosticId="SYSLIB0051")]
        protected DataSetCollectionEventSeries(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["CollectionEventSeries"] != null)) {
                    base.Tables.Add(new CollectionEventSeriesDataTable(ds.Tables["CollectionEventSeries"]));
                }
                if ((ds.Tables["CollectionEventSeriesImage"] != null)) {
                    base.Tables.Add(new CollectionEventSeriesImageDataTable(ds.Tables["CollectionEventSeriesImage"]));
                }
                if ((ds.Tables["CollectionEventSeriesDescriptor"] != null)) {
                    base.Tables.Add(new CollectionEventSeriesDescriptorDataTable(ds.Tables["CollectionEventSeriesDescriptor"]));
                }
                if ((ds.Tables["CollectionEventList"] != null)) {
                    base.Tables.Add(new CollectionEventListDataTable(ds.Tables["CollectionEventList"]));
                }
                if ((ds.Tables["CollectionSpecimenList"] != null)) {
                    base.Tables.Add(new CollectionSpecimenListDataTable(ds.Tables["CollectionSpecimenList"]));
                }
                if ((ds.Tables["IdentificationUnitList"] != null)) {
                    base.Tables.Add(new IdentificationUnitListDataTable(ds.Tables["IdentificationUnitList"]));
                }
                if ((ds.Tables["CollectionEventLocalisationList"] != null)) {
                    base.Tables.Add(new CollectionEventLocalisationListDataTable(ds.Tables["CollectionEventLocalisationList"]));
                }
                if ((ds.Tables["CollectionEventSeriesGeography"] != null)) {
                    base.Tables.Add(new CollectionEventSeriesGeographyDataTable(ds.Tables["CollectionEventSeriesGeography"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CollectionEventSeriesDataTable CollectionEventSeries {
            get {
                return this.tableCollectionEventSeries;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CollectionEventSeriesImageDataTable CollectionEventSeriesImage {
            get {
                return this.tableCollectionEventSeriesImage;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CollectionEventSeriesDescriptorDataTable CollectionEventSeriesDescriptor {
            get {
                return this.tableCollectionEventSeriesDescriptor;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CollectionEventListDataTable CollectionEventList {
            get {
                return this.tableCollectionEventList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CollectionSpecimenListDataTable CollectionSpecimenList {
            get {
                return this.tableCollectionSpecimenList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public IdentificationUnitListDataTable IdentificationUnitList {
            get {
                return this.tableIdentificationUnitList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CollectionEventLocalisationListDataTable CollectionEventLocalisationList {
            get {
                return this.tableCollectionEventLocalisationList;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CollectionEventSeriesGeographyDataTable CollectionEventSeriesGeography {
            get {
                return this.tableCollectionEventSeriesGeography;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetCollectionEventSeries cln = ((DataSetCollectionEventSeries)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["CollectionEventSeries"] != null)) {
                    base.Tables.Add(new CollectionEventSeriesDataTable(ds.Tables["CollectionEventSeries"]));
                }
                if ((ds.Tables["CollectionEventSeriesImage"] != null)) {
                    base.Tables.Add(new CollectionEventSeriesImageDataTable(ds.Tables["CollectionEventSeriesImage"]));
                }
                if ((ds.Tables["CollectionEventSeriesDescriptor"] != null)) {
                    base.Tables.Add(new CollectionEventSeriesDescriptorDataTable(ds.Tables["CollectionEventSeriesDescriptor"]));
                }
                if ((ds.Tables["CollectionEventList"] != null)) {
                    base.Tables.Add(new CollectionEventListDataTable(ds.Tables["CollectionEventList"]));
                }
                if ((ds.Tables["CollectionSpecimenList"] != null)) {
                    base.Tables.Add(new CollectionSpecimenListDataTable(ds.Tables["CollectionSpecimenList"]));
                }
                if ((ds.Tables["IdentificationUnitList"] != null)) {
                    base.Tables.Add(new IdentificationUnitListDataTable(ds.Tables["IdentificationUnitList"]));
                }
                if ((ds.Tables["CollectionEventLocalisationList"] != null)) {
                    base.Tables.Add(new CollectionEventLocalisationListDataTable(ds.Tables["CollectionEventLocalisationList"]));
                }
                if ((ds.Tables["CollectionEventSeriesGeography"] != null)) {
                    base.Tables.Add(new CollectionEventSeriesGeographyDataTable(ds.Tables["CollectionEventSeriesGeography"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableCollectionEventSeries = ((CollectionEventSeriesDataTable)(base.Tables["CollectionEventSeries"]));
            if ((initTable == true)) {
                if ((this.tableCollectionEventSeries != null)) {
                    this.tableCollectionEventSeries.InitVars();
                }
            }
            this.tableCollectionEventSeriesImage = ((CollectionEventSeriesImageDataTable)(base.Tables["CollectionEventSeriesImage"]));
            if ((initTable == true)) {
                if ((this.tableCollectionEventSeriesImage != null)) {
                    this.tableCollectionEventSeriesImage.InitVars();
                }
            }
            this.tableCollectionEventSeriesDescriptor = ((CollectionEventSeriesDescriptorDataTable)(base.Tables["CollectionEventSeriesDescriptor"]));
            if ((initTable == true)) {
                if ((this.tableCollectionEventSeriesDescriptor != null)) {
                    this.tableCollectionEventSeriesDescriptor.InitVars();
                }
            }
            this.tableCollectionEventList = ((CollectionEventListDataTable)(base.Tables["CollectionEventList"]));
            if ((initTable == true)) {
                if ((this.tableCollectionEventList != null)) {
                    this.tableCollectionEventList.InitVars();
                }
            }
            this.tableCollectionSpecimenList = ((CollectionSpecimenListDataTable)(base.Tables["CollectionSpecimenList"]));
            if ((initTable == true)) {
                if ((this.tableCollectionSpecimenList != null)) {
                    this.tableCollectionSpecimenList.InitVars();
                }
            }
            this.tableIdentificationUnitList = ((IdentificationUnitListDataTable)(base.Tables["IdentificationUnitList"]));
            if ((initTable == true)) {
                if ((this.tableIdentificationUnitList != null)) {
                    this.tableIdentificationUnitList.InitVars();
                }
            }
            this.tableCollectionEventLocalisationList = ((CollectionEventLocalisationListDataTable)(base.Tables["CollectionEventLocalisationList"]));
            if ((initTable == true)) {
                if ((this.tableCollectionEventLocalisationList != null)) {
                    this.tableCollectionEventLocalisationList.InitVars();
                }
            }
            this.tableCollectionEventSeriesGeography = ((CollectionEventSeriesGeographyDataTable)(base.Tables["CollectionEventSeriesGeography"]));
            if ((initTable == true)) {
                if ((this.tableCollectionEventSeriesGeography != null)) {
                    this.tableCollectionEventSeriesGeography.InitVars();
                }
            }
            this.relationCollectionEvent_CollectionSpecimen = this.Relations["CollectionEvent_CollectionSpecimen"];
            this.relationCollectionSpecimen_IdentificationUnit = this.Relations["CollectionSpecimen_IdentificationUnit"];
            this.relationCollectionEventLocalisation_CollectionEventList = this.Relations["CollectionEventLocalisation_CollectionEventList"];
            this.relationFK_CollectionEventSeriesImage_CollectionEventSeries = this.Relations["FK_CollectionEventSeriesImage_CollectionEventSeries"];
            this.relationCollectionEventSeries_CollectionEvent = this.Relations["CollectionEventSeries_CollectionEvent"];
            this.relationFK_CollectionEventSeries_CollectionEventSeries = this.Relations["FK_CollectionEventSeries_CollectionEventSeries"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetCollectionEventSeries";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetCollectionEventSeries.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCollectionEventSeries = new CollectionEventSeriesDataTable();
            base.Tables.Add(this.tableCollectionEventSeries);
            this.tableCollectionEventSeriesImage = new CollectionEventSeriesImageDataTable();
            base.Tables.Add(this.tableCollectionEventSeriesImage);
            this.tableCollectionEventSeriesDescriptor = new CollectionEventSeriesDescriptorDataTable();
            base.Tables.Add(this.tableCollectionEventSeriesDescriptor);
            this.tableCollectionEventList = new CollectionEventListDataTable();
            base.Tables.Add(this.tableCollectionEventList);
            this.tableCollectionSpecimenList = new CollectionSpecimenListDataTable();
            base.Tables.Add(this.tableCollectionSpecimenList);
            this.tableIdentificationUnitList = new IdentificationUnitListDataTable();
            base.Tables.Add(this.tableIdentificationUnitList);
            this.tableCollectionEventLocalisationList = new CollectionEventLocalisationListDataTable();
            base.Tables.Add(this.tableCollectionEventLocalisationList);
            this.tableCollectionEventSeriesGeography = new CollectionEventSeriesGeographyDataTable();
            base.Tables.Add(this.tableCollectionEventSeriesGeography);
            this.relationCollectionEvent_CollectionSpecimen = new global::System.Data.DataRelation("CollectionEvent_CollectionSpecimen", new global::System.Data.DataColumn[] {
                        this.tableCollectionEventList.CollectionEventIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCollectionSpecimenList.CollectionEventIDColumn}, false);
            this.Relations.Add(this.relationCollectionEvent_CollectionSpecimen);
            this.relationCollectionSpecimen_IdentificationUnit = new global::System.Data.DataRelation("CollectionSpecimen_IdentificationUnit", new global::System.Data.DataColumn[] {
                        this.tableCollectionSpecimenList.CollectionSpecimenIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableIdentificationUnitList.CollectionSpecimenIDColumn}, false);
            this.Relations.Add(this.relationCollectionSpecimen_IdentificationUnit);
            this.relationCollectionEventLocalisation_CollectionEventList = new global::System.Data.DataRelation("CollectionEventLocalisation_CollectionEventList", new global::System.Data.DataColumn[] {
                        this.tableCollectionEventLocalisationList.CollectionEventIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCollectionEventList.CollectionEventIDColumn}, false);
            this.Relations.Add(this.relationCollectionEventLocalisation_CollectionEventList);
            this.relationFK_CollectionEventSeriesImage_CollectionEventSeries = new global::System.Data.DataRelation("FK_CollectionEventSeriesImage_CollectionEventSeries", new global::System.Data.DataColumn[] {
                        this.tableCollectionEventSeries.SeriesIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCollectionEventSeriesImage.SeriesIDColumn}, false);
            this.Relations.Add(this.relationFK_CollectionEventSeriesImage_CollectionEventSeries);
            this.relationCollectionEventSeries_CollectionEvent = new global::System.Data.DataRelation("CollectionEventSeries_CollectionEvent", new global::System.Data.DataColumn[] {
                        this.tableCollectionEventSeries.SeriesIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCollectionEventList.SeriesIDColumn}, false);
            this.Relations.Add(this.relationCollectionEventSeries_CollectionEvent);
            this.relationFK_CollectionEventSeries_CollectionEventSeries = new global::System.Data.DataRelation("FK_CollectionEventSeries_CollectionEventSeries", new global::System.Data.DataColumn[] {
                        this.tableCollectionEventSeries.SeriesIDColumn}, new global::System.Data.DataColumn[] {
                        this.tableCollectionEventSeries.SeriesParentIDColumn}, false);
            this.Relations.Add(this.relationFK_CollectionEventSeries_CollectionEventSeries);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeCollectionEventSeries() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeCollectionEventSeriesImage() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeCollectionEventSeriesDescriptor() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeCollectionEventList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeCollectionSpecimenList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeIdentificationUnitList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeCollectionEventLocalisationList() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeCollectionEventSeriesGeography() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetCollectionEventSeries ds = new DataSetCollectionEventSeries();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void CollectionEventSeriesRowChangeEventHandler(object sender, CollectionEventSeriesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void CollectionEventSeriesImageRowChangeEventHandler(object sender, CollectionEventSeriesImageRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void CollectionEventSeriesDescriptorRowChangeEventHandler(object sender, CollectionEventSeriesDescriptorRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void CollectionEventListRowChangeEventHandler(object sender, CollectionEventListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void CollectionSpecimenListRowChangeEventHandler(object sender, CollectionSpecimenListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void IdentificationUnitListRowChangeEventHandler(object sender, IdentificationUnitListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void CollectionEventLocalisationListRowChangeEventHandler(object sender, CollectionEventLocalisationListRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void CollectionEventSeriesGeographyRowChangeEventHandler(object sender, CollectionEventSeriesGeographyRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CollectionEventSeriesDataTable : global::System.Data.TypedTableBase<CollectionEventSeriesRow> {
            
            private global::System.Data.DataColumn columnSeriesID;
            
            private global::System.Data.DataColumn columnSeriesParentID;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnSeriesCode;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnDateStart;
            
            private global::System.Data.DataColumn columnDateEnd;
            
            private global::System.Data.DataColumn columnDateSupplement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesDataTable() {
                this.TableName = "CollectionEventSeries";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventSeriesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected CollectionEventSeriesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SeriesIDColumn {
                get {
                    return this.columnSeriesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SeriesParentIDColumn {
                get {
                    return this.columnSeriesParentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SeriesCodeColumn {
                get {
                    return this.columnSeriesCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DateStartColumn {
                get {
                    return this.columnDateStart;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DateEndColumn {
                get {
                    return this.columnDateEnd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DateSupplementColumn {
                get {
                    return this.columnDateSupplement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesRow this[int index] {
                get {
                    return ((CollectionEventSeriesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesRowChangeEventHandler CollectionEventSeriesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesRowChangeEventHandler CollectionEventSeriesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesRowChangeEventHandler CollectionEventSeriesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesRowChangeEventHandler CollectionEventSeriesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddCollectionEventSeriesRow(CollectionEventSeriesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesRow AddCollectionEventSeriesRow(CollectionEventSeriesRow parentCollectionEventSeriesRowByFK_CollectionEventSeries_CollectionEventSeries, string Description, string SeriesCode, string Notes, System.DateTime DateStart, System.DateTime DateEnd, string DateSupplement) {
                CollectionEventSeriesRow rowCollectionEventSeriesRow = ((CollectionEventSeriesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Description,
                        SeriesCode,
                        Notes,
                        DateStart,
                        DateEnd,
                        DateSupplement};
                if ((parentCollectionEventSeriesRowByFK_CollectionEventSeries_CollectionEventSeries != null)) {
                    columnValuesArray[1] = parentCollectionEventSeriesRowByFK_CollectionEventSeries_CollectionEventSeries[0];
                }
                rowCollectionEventSeriesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCollectionEventSeriesRow);
                return rowCollectionEventSeriesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesRow FindBySeriesID(int SeriesID) {
                return ((CollectionEventSeriesRow)(this.Rows.Find(new object[] {
                            SeriesID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CollectionEventSeriesDataTable cln = ((CollectionEventSeriesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CollectionEventSeriesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnSeriesID = base.Columns["SeriesID"];
                this.columnSeriesParentID = base.Columns["SeriesParentID"];
                this.columnDescription = base.Columns["Description"];
                this.columnSeriesCode = base.Columns["SeriesCode"];
                this.columnNotes = base.Columns["Notes"];
                this.columnDateStart = base.Columns["DateStart"];
                this.columnDateEnd = base.Columns["DateEnd"];
                this.columnDateSupplement = base.Columns["DateSupplement"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnSeriesID = new global::System.Data.DataColumn("SeriesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeriesID);
                this.columnSeriesParentID = new global::System.Data.DataColumn("SeriesParentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeriesParentID);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnSeriesCode = new global::System.Data.DataColumn("SeriesCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeriesCode);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnDateStart = new global::System.Data.DataColumn("DateStart", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateStart);
                this.columnDateEnd = new global::System.Data.DataColumn("DateEnd", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateEnd);
                this.columnDateSupplement = new global::System.Data.DataColumn("DateSupplement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateSupplement);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSeriesID}, true));
                this.columnSeriesID.AutoIncrement = true;
                this.columnSeriesID.AllowDBNull = false;
                this.columnSeriesID.ReadOnly = true;
                this.columnSeriesID.Unique = true;
                this.columnDescription.AllowDBNull = false;
                this.columnDescription.MaxLength = 2147483647;
                this.columnSeriesCode.MaxLength = 50;
                this.columnNotes.MaxLength = 2147483647;
                this.columnDateSupplement.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesRow NewCollectionEventSeriesRow() {
                return ((CollectionEventSeriesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CollectionEventSeriesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CollectionEventSeriesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CollectionEventSeriesRowChanged != null)) {
                    this.CollectionEventSeriesRowChanged(this, new CollectionEventSeriesRowChangeEvent(((CollectionEventSeriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CollectionEventSeriesRowChanging != null)) {
                    this.CollectionEventSeriesRowChanging(this, new CollectionEventSeriesRowChangeEvent(((CollectionEventSeriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CollectionEventSeriesRowDeleted != null)) {
                    this.CollectionEventSeriesRowDeleted(this, new CollectionEventSeriesRowChangeEvent(((CollectionEventSeriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CollectionEventSeriesRowDeleting != null)) {
                    this.CollectionEventSeriesRowDeleting(this, new CollectionEventSeriesRowChangeEvent(((CollectionEventSeriesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveCollectionEventSeriesRow(CollectionEventSeriesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCollectionEventSeries ds = new DataSetCollectionEventSeries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CollectionEventSeriesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CollectionEventSeriesImageDataTable : global::System.Data.TypedTableBase<CollectionEventSeriesImageRow> {
            
            private global::System.Data.DataColumn columnSeriesID;
            
            private global::System.Data.DataColumn columnURI;
            
            private global::System.Data.DataColumn columnResourceURI;
            
            private global::System.Data.DataColumn columnImageType;
            
            private global::System.Data.DataColumn columnNotes;
            
            private global::System.Data.DataColumn columnDataWithholdingReason;
            
            private global::System.Data.DataColumn columnDescription;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnIPR;
            
            private global::System.Data.DataColumn columnCreatorAgent;
            
            private global::System.Data.DataColumn columnCreatorAgentURI;
            
            private global::System.Data.DataColumn columnCopyrightStatement;
            
            private global::System.Data.DataColumn columnLicenseType;
            
            private global::System.Data.DataColumn columnInternalNotes;
            
            private global::System.Data.DataColumn columnLicenseHolder;
            
            private global::System.Data.DataColumn columnLicenseHolderAgentURI;
            
            private global::System.Data.DataColumn columnLicenseYear;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesImageDataTable() {
                this.TableName = "CollectionEventSeriesImage";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventSeriesImageDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected CollectionEventSeriesImageDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SeriesIDColumn {
                get {
                    return this.columnSeriesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn URIColumn {
                get {
                    return this.columnURI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ResourceURIColumn {
                get {
                    return this.columnResourceURI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ImageTypeColumn {
                get {
                    return this.columnImageType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn NotesColumn {
                get {
                    return this.columnNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DataWithholdingReasonColumn {
                get {
                    return this.columnDataWithholdingReason;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IPRColumn {
                get {
                    return this.columnIPR;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatorAgentColumn {
                get {
                    return this.columnCreatorAgent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CreatorAgentURIColumn {
                get {
                    return this.columnCreatorAgentURI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CopyrightStatementColumn {
                get {
                    return this.columnCopyrightStatement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LicenseTypeColumn {
                get {
                    return this.columnLicenseType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn InternalNotesColumn {
                get {
                    return this.columnInternalNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LicenseHolderColumn {
                get {
                    return this.columnLicenseHolder;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LicenseHolderAgentURIColumn {
                get {
                    return this.columnLicenseHolderAgentURI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LicenseYearColumn {
                get {
                    return this.columnLicenseYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesImageRow this[int index] {
                get {
                    return ((CollectionEventSeriesImageRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesImageRowChangeEventHandler CollectionEventSeriesImageRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesImageRowChangeEventHandler CollectionEventSeriesImageRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesImageRowChangeEventHandler CollectionEventSeriesImageRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesImageRowChangeEventHandler CollectionEventSeriesImageRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddCollectionEventSeriesImageRow(CollectionEventSeriesImageRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesImageRow AddCollectionEventSeriesImageRow(
                        CollectionEventSeriesRow parentCollectionEventSeriesRowByFK_CollectionEventSeriesImage_CollectionEventSeries, 
                        string URI, 
                        string ResourceURI, 
                        string ImageType, 
                        string Notes, 
                        string DataWithholdingReason, 
                        string Description, 
                        string Title, 
                        string IPR, 
                        string CreatorAgent, 
                        string CreatorAgentURI, 
                        string CopyrightStatement, 
                        string LicenseType, 
                        string InternalNotes, 
                        string LicenseHolder, 
                        string LicenseHolderAgentURI, 
                        string LicenseYear) {
                CollectionEventSeriesImageRow rowCollectionEventSeriesImageRow = ((CollectionEventSeriesImageRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        URI,
                        ResourceURI,
                        ImageType,
                        Notes,
                        DataWithholdingReason,
                        Description,
                        Title,
                        IPR,
                        CreatorAgent,
                        CreatorAgentURI,
                        CopyrightStatement,
                        LicenseType,
                        InternalNotes,
                        LicenseHolder,
                        LicenseHolderAgentURI,
                        LicenseYear};
                if ((parentCollectionEventSeriesRowByFK_CollectionEventSeriesImage_CollectionEventSeries != null)) {
                    columnValuesArray[0] = parentCollectionEventSeriesRowByFK_CollectionEventSeriesImage_CollectionEventSeries[0];
                }
                rowCollectionEventSeriesImageRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCollectionEventSeriesImageRow);
                return rowCollectionEventSeriesImageRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesImageRow FindBySeriesIDURI(int SeriesID, string URI) {
                return ((CollectionEventSeriesImageRow)(this.Rows.Find(new object[] {
                            SeriesID,
                            URI})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CollectionEventSeriesImageDataTable cln = ((CollectionEventSeriesImageDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CollectionEventSeriesImageDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnSeriesID = base.Columns["SeriesID"];
                this.columnURI = base.Columns["URI"];
                this.columnResourceURI = base.Columns["ResourceURI"];
                this.columnImageType = base.Columns["ImageType"];
                this.columnNotes = base.Columns["Notes"];
                this.columnDataWithholdingReason = base.Columns["DataWithholdingReason"];
                this.columnDescription = base.Columns["Description"];
                this.columnTitle = base.Columns["Title"];
                this.columnIPR = base.Columns["IPR"];
                this.columnCreatorAgent = base.Columns["CreatorAgent"];
                this.columnCreatorAgentURI = base.Columns["CreatorAgentURI"];
                this.columnCopyrightStatement = base.Columns["CopyrightStatement"];
                this.columnLicenseType = base.Columns["LicenseType"];
                this.columnInternalNotes = base.Columns["InternalNotes"];
                this.columnLicenseHolder = base.Columns["LicenseHolder"];
                this.columnLicenseHolderAgentURI = base.Columns["LicenseHolderAgentURI"];
                this.columnLicenseYear = base.Columns["LicenseYear"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnSeriesID = new global::System.Data.DataColumn("SeriesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeriesID);
                this.columnURI = new global::System.Data.DataColumn("URI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURI);
                this.columnResourceURI = new global::System.Data.DataColumn("ResourceURI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResourceURI);
                this.columnImageType = new global::System.Data.DataColumn("ImageType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImageType);
                this.columnNotes = new global::System.Data.DataColumn("Notes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNotes);
                this.columnDataWithholdingReason = new global::System.Data.DataColumn("DataWithholdingReason", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDataWithholdingReason);
                this.columnDescription = new global::System.Data.DataColumn("Description", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnIPR = new global::System.Data.DataColumn("IPR", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIPR);
                this.columnCreatorAgent = new global::System.Data.DataColumn("CreatorAgent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorAgent);
                this.columnCreatorAgentURI = new global::System.Data.DataColumn("CreatorAgentURI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreatorAgentURI);
                this.columnCopyrightStatement = new global::System.Data.DataColumn("CopyrightStatement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCopyrightStatement);
                this.columnLicenseType = new global::System.Data.DataColumn("LicenseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenseType);
                this.columnInternalNotes = new global::System.Data.DataColumn("InternalNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInternalNotes);
                this.columnLicenseHolder = new global::System.Data.DataColumn("LicenseHolder", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenseHolder);
                this.columnLicenseHolderAgentURI = new global::System.Data.DataColumn("LicenseHolderAgentURI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenseHolderAgentURI);
                this.columnLicenseYear = new global::System.Data.DataColumn("LicenseYear", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLicenseYear);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSeriesID,
                                this.columnURI}, true));
                this.columnSeriesID.AllowDBNull = false;
                this.columnURI.AllowDBNull = false;
                this.columnURI.MaxLength = 255;
                this.columnResourceURI.MaxLength = 255;
                this.columnImageType.MaxLength = 50;
                this.columnNotes.MaxLength = 2147483647;
                this.columnDataWithholdingReason.MaxLength = 255;
                this.columnDescription.MaxLength = 2147483647;
                this.columnTitle.MaxLength = 500;
                this.columnIPR.MaxLength = 500;
                this.columnCreatorAgent.MaxLength = 500;
                this.columnCreatorAgentURI.MaxLength = 255;
                this.columnCopyrightStatement.MaxLength = 500;
                this.columnLicenseType.MaxLength = 500;
                this.columnInternalNotes.MaxLength = 500;
                this.columnLicenseHolder.MaxLength = 500;
                this.columnLicenseHolderAgentURI.MaxLength = 500;
                this.columnLicenseYear.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesImageRow NewCollectionEventSeriesImageRow() {
                return ((CollectionEventSeriesImageRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CollectionEventSeriesImageRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CollectionEventSeriesImageRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CollectionEventSeriesImageRowChanged != null)) {
                    this.CollectionEventSeriesImageRowChanged(this, new CollectionEventSeriesImageRowChangeEvent(((CollectionEventSeriesImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CollectionEventSeriesImageRowChanging != null)) {
                    this.CollectionEventSeriesImageRowChanging(this, new CollectionEventSeriesImageRowChangeEvent(((CollectionEventSeriesImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CollectionEventSeriesImageRowDeleted != null)) {
                    this.CollectionEventSeriesImageRowDeleted(this, new CollectionEventSeriesImageRowChangeEvent(((CollectionEventSeriesImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CollectionEventSeriesImageRowDeleting != null)) {
                    this.CollectionEventSeriesImageRowDeleting(this, new CollectionEventSeriesImageRowChangeEvent(((CollectionEventSeriesImageRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveCollectionEventSeriesImageRow(CollectionEventSeriesImageRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCollectionEventSeries ds = new DataSetCollectionEventSeries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CollectionEventSeriesImageDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CollectionEventSeriesDescriptorDataTable : global::System.Data.TypedTableBase<CollectionEventSeriesDescriptorRow> {
            
            private global::System.Data.DataColumn columnSeriesID;
            
            private global::System.Data.DataColumn columnDescriptorID;
            
            private global::System.Data.DataColumn columnDescriptor;
            
            private global::System.Data.DataColumn columnURL;
            
            private global::System.Data.DataColumn columnDescriptorType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesDescriptorDataTable() {
                this.TableName = "CollectionEventSeriesDescriptor";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventSeriesDescriptorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected CollectionEventSeriesDescriptorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SeriesIDColumn {
                get {
                    return this.columnSeriesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DescriptorIDColumn {
                get {
                    return this.columnDescriptorID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DescriptorColumn {
                get {
                    return this.columnDescriptor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn URLColumn {
                get {
                    return this.columnURL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DescriptorTypeColumn {
                get {
                    return this.columnDescriptorType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesDescriptorRow this[int index] {
                get {
                    return ((CollectionEventSeriesDescriptorRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesDescriptorRowChangeEventHandler CollectionEventSeriesDescriptorRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesDescriptorRowChangeEventHandler CollectionEventSeriesDescriptorRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesDescriptorRowChangeEventHandler CollectionEventSeriesDescriptorRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesDescriptorRowChangeEventHandler CollectionEventSeriesDescriptorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddCollectionEventSeriesDescriptorRow(CollectionEventSeriesDescriptorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesDescriptorRow AddCollectionEventSeriesDescriptorRow(int SeriesID, string Descriptor, string URL, string DescriptorType) {
                CollectionEventSeriesDescriptorRow rowCollectionEventSeriesDescriptorRow = ((CollectionEventSeriesDescriptorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SeriesID,
                        null,
                        Descriptor,
                        URL,
                        DescriptorType};
                rowCollectionEventSeriesDescriptorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCollectionEventSeriesDescriptorRow);
                return rowCollectionEventSeriesDescriptorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesDescriptorRow FindBySeriesIDDescriptorID(int SeriesID, int DescriptorID) {
                return ((CollectionEventSeriesDescriptorRow)(this.Rows.Find(new object[] {
                            SeriesID,
                            DescriptorID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CollectionEventSeriesDescriptorDataTable cln = ((CollectionEventSeriesDescriptorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CollectionEventSeriesDescriptorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnSeriesID = base.Columns["SeriesID"];
                this.columnDescriptorID = base.Columns["DescriptorID"];
                this.columnDescriptor = base.Columns["Descriptor"];
                this.columnURL = base.Columns["URL"];
                this.columnDescriptorType = base.Columns["DescriptorType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnSeriesID = new global::System.Data.DataColumn("SeriesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeriesID);
                this.columnDescriptorID = new global::System.Data.DataColumn("DescriptorID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescriptorID);
                this.columnDescriptor = new global::System.Data.DataColumn("Descriptor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescriptor);
                this.columnURL = new global::System.Data.DataColumn("URL", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnURL);
                this.columnDescriptorType = new global::System.Data.DataColumn("DescriptorType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescriptorType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSeriesID,
                                this.columnDescriptorID}, true));
                this.columnSeriesID.AllowDBNull = false;
                this.columnDescriptorID.AutoIncrement = true;
                this.columnDescriptorID.AutoIncrementSeed = -1;
                this.columnDescriptorID.AutoIncrementStep = -1;
                this.columnDescriptorID.AllowDBNull = false;
                this.columnDescriptorID.ReadOnly = true;
                this.columnDescriptor.AllowDBNull = false;
                this.columnDescriptor.MaxLength = 200;
                this.columnURL.MaxLength = 500;
                this.columnDescriptorType.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesDescriptorRow NewCollectionEventSeriesDescriptorRow() {
                return ((CollectionEventSeriesDescriptorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CollectionEventSeriesDescriptorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CollectionEventSeriesDescriptorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CollectionEventSeriesDescriptorRowChanged != null)) {
                    this.CollectionEventSeriesDescriptorRowChanged(this, new CollectionEventSeriesDescriptorRowChangeEvent(((CollectionEventSeriesDescriptorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CollectionEventSeriesDescriptorRowChanging != null)) {
                    this.CollectionEventSeriesDescriptorRowChanging(this, new CollectionEventSeriesDescriptorRowChangeEvent(((CollectionEventSeriesDescriptorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CollectionEventSeriesDescriptorRowDeleted != null)) {
                    this.CollectionEventSeriesDescriptorRowDeleted(this, new CollectionEventSeriesDescriptorRowChangeEvent(((CollectionEventSeriesDescriptorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CollectionEventSeriesDescriptorRowDeleting != null)) {
                    this.CollectionEventSeriesDescriptorRowDeleting(this, new CollectionEventSeriesDescriptorRowChangeEvent(((CollectionEventSeriesDescriptorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveCollectionEventSeriesDescriptorRow(CollectionEventSeriesDescriptorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCollectionEventSeries ds = new DataSetCollectionEventSeries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CollectionEventSeriesDescriptorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CollectionEventListDataTable : global::System.Data.TypedTableBase<CollectionEventListRow> {
            
            private global::System.Data.DataColumn columnCollectionEventID;
            
            private global::System.Data.DataColumn columnSeriesID;
            
            private global::System.Data.DataColumn columnDisplayText;
            
            private global::System.Data.DataColumn columnCollectionDate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventListDataTable() {
                this.TableName = "CollectionEventList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected CollectionEventListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CollectionEventIDColumn {
                get {
                    return this.columnCollectionEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SeriesIDColumn {
                get {
                    return this.columnSeriesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DisplayTextColumn {
                get {
                    return this.columnDisplayText;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CollectionDateColumn {
                get {
                    return this.columnCollectionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventListRow this[int index] {
                get {
                    return ((CollectionEventListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventListRowChangeEventHandler CollectionEventListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventListRowChangeEventHandler CollectionEventListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventListRowChangeEventHandler CollectionEventListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventListRowChangeEventHandler CollectionEventListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddCollectionEventListRow(CollectionEventListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventListRow AddCollectionEventListRow(CollectionEventSeriesRow parentCollectionEventSeriesRowByCollectionEventSeries_CollectionEvent, string DisplayText, string CollectionDate) {
                CollectionEventListRow rowCollectionEventListRow = ((CollectionEventListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        DisplayText,
                        CollectionDate};
                if ((parentCollectionEventSeriesRowByCollectionEventSeries_CollectionEvent != null)) {
                    columnValuesArray[1] = parentCollectionEventSeriesRowByCollectionEventSeries_CollectionEvent[0];
                }
                rowCollectionEventListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCollectionEventListRow);
                return rowCollectionEventListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventListRow FindByCollectionEventID(int CollectionEventID) {
                return ((CollectionEventListRow)(this.Rows.Find(new object[] {
                            CollectionEventID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CollectionEventListDataTable cln = ((CollectionEventListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CollectionEventListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCollectionEventID = base.Columns["CollectionEventID"];
                this.columnSeriesID = base.Columns["SeriesID"];
                this.columnDisplayText = base.Columns["DisplayText"];
                this.columnCollectionDate = base.Columns["CollectionDate"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCollectionEventID = new global::System.Data.DataColumn("CollectionEventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollectionEventID);
                this.columnSeriesID = new global::System.Data.DataColumn("SeriesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeriesID);
                this.columnDisplayText = new global::System.Data.DataColumn("DisplayText", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDisplayText);
                this.columnCollectionDate = new global::System.Data.DataColumn("CollectionDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollectionDate);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCollectionEventID}, true));
                this.columnCollectionEventID.AutoIncrement = true;
                this.columnCollectionEventID.AllowDBNull = false;
                this.columnCollectionEventID.ReadOnly = true;
                this.columnCollectionEventID.Unique = true;
                this.columnSeriesID.Caption = "ExpeditionID";
                this.columnDisplayText.Caption = "CollectorsEventNumber";
                this.columnDisplayText.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventListRow NewCollectionEventListRow() {
                return ((CollectionEventListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CollectionEventListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CollectionEventListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CollectionEventListRowChanged != null)) {
                    this.CollectionEventListRowChanged(this, new CollectionEventListRowChangeEvent(((CollectionEventListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CollectionEventListRowChanging != null)) {
                    this.CollectionEventListRowChanging(this, new CollectionEventListRowChangeEvent(((CollectionEventListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CollectionEventListRowDeleted != null)) {
                    this.CollectionEventListRowDeleted(this, new CollectionEventListRowChangeEvent(((CollectionEventListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CollectionEventListRowDeleting != null)) {
                    this.CollectionEventListRowDeleting(this, new CollectionEventListRowChangeEvent(((CollectionEventListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveCollectionEventListRow(CollectionEventListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCollectionEventSeries ds = new DataSetCollectionEventSeries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CollectionEventListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CollectionSpecimenListDataTable : global::System.Data.TypedTableBase<CollectionSpecimenListRow> {
            
            private global::System.Data.DataColumn columnCollectionSpecimenID;
            
            private global::System.Data.DataColumn columnCollectionEventID;
            
            private global::System.Data.DataColumn columnAccessionNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionSpecimenListDataTable() {
                this.TableName = "CollectionSpecimenList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionSpecimenListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected CollectionSpecimenListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CollectionSpecimenIDColumn {
                get {
                    return this.columnCollectionSpecimenID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CollectionEventIDColumn {
                get {
                    return this.columnCollectionEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AccessionNumberColumn {
                get {
                    return this.columnAccessionNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionSpecimenListRow this[int index] {
                get {
                    return ((CollectionSpecimenListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionSpecimenListRowChangeEventHandler CollectionSpecimenListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionSpecimenListRowChangeEventHandler CollectionSpecimenListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionSpecimenListRowChangeEventHandler CollectionSpecimenListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionSpecimenListRowChangeEventHandler CollectionSpecimenListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddCollectionSpecimenListRow(CollectionSpecimenListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionSpecimenListRow AddCollectionSpecimenListRow(CollectionEventListRow parentCollectionEventListRowByCollectionEvent_CollectionSpecimen, string AccessionNumber) {
                CollectionSpecimenListRow rowCollectionSpecimenListRow = ((CollectionSpecimenListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        AccessionNumber};
                if ((parentCollectionEventListRowByCollectionEvent_CollectionSpecimen != null)) {
                    columnValuesArray[1] = parentCollectionEventListRowByCollectionEvent_CollectionSpecimen[0];
                }
                rowCollectionSpecimenListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCollectionSpecimenListRow);
                return rowCollectionSpecimenListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionSpecimenListRow FindByCollectionSpecimenID(int CollectionSpecimenID) {
                return ((CollectionSpecimenListRow)(this.Rows.Find(new object[] {
                            CollectionSpecimenID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CollectionSpecimenListDataTable cln = ((CollectionSpecimenListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CollectionSpecimenListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCollectionSpecimenID = base.Columns["CollectionSpecimenID"];
                this.columnCollectionEventID = base.Columns["CollectionEventID"];
                this.columnAccessionNumber = base.Columns["AccessionNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCollectionSpecimenID = new global::System.Data.DataColumn("CollectionSpecimenID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollectionSpecimenID);
                this.columnCollectionEventID = new global::System.Data.DataColumn("CollectionEventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollectionEventID);
                this.columnAccessionNumber = new global::System.Data.DataColumn("AccessionNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccessionNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCollectionSpecimenID}, true));
                this.columnCollectionSpecimenID.AutoIncrement = true;
                this.columnCollectionSpecimenID.AllowDBNull = false;
                this.columnCollectionSpecimenID.ReadOnly = true;
                this.columnCollectionSpecimenID.Unique = true;
                this.columnAccessionNumber.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionSpecimenListRow NewCollectionSpecimenListRow() {
                return ((CollectionSpecimenListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CollectionSpecimenListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CollectionSpecimenListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CollectionSpecimenListRowChanged != null)) {
                    this.CollectionSpecimenListRowChanged(this, new CollectionSpecimenListRowChangeEvent(((CollectionSpecimenListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CollectionSpecimenListRowChanging != null)) {
                    this.CollectionSpecimenListRowChanging(this, new CollectionSpecimenListRowChangeEvent(((CollectionSpecimenListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CollectionSpecimenListRowDeleted != null)) {
                    this.CollectionSpecimenListRowDeleted(this, new CollectionSpecimenListRowChangeEvent(((CollectionSpecimenListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CollectionSpecimenListRowDeleting != null)) {
                    this.CollectionSpecimenListRowDeleting(this, new CollectionSpecimenListRowChangeEvent(((CollectionSpecimenListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveCollectionSpecimenListRow(CollectionSpecimenListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCollectionEventSeries ds = new DataSetCollectionEventSeries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CollectionSpecimenListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class IdentificationUnitListDataTable : global::System.Data.TypedTableBase<IdentificationUnitListRow> {
            
            private global::System.Data.DataColumn columnCollectionSpecimenID;
            
            private global::System.Data.DataColumn columnIdentificationUnitID;
            
            private global::System.Data.DataColumn columnLastIdentificationCache;
            
            private global::System.Data.DataColumn columnRelatedUnitID;
            
            private global::System.Data.DataColumn columnTaxonomicGroup;
            
            private global::System.Data.DataColumn columnUnitIdentifier;
            
            private global::System.Data.DataColumn columnUnitDescription;
            
            private global::System.Data.DataColumn columnGender;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IdentificationUnitListDataTable() {
                this.TableName = "IdentificationUnitList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal IdentificationUnitListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected IdentificationUnitListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CollectionSpecimenIDColumn {
                get {
                    return this.columnCollectionSpecimenID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn IdentificationUnitIDColumn {
                get {
                    return this.columnIdentificationUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LastIdentificationCacheColumn {
                get {
                    return this.columnLastIdentificationCache;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn RelatedUnitIDColumn {
                get {
                    return this.columnRelatedUnitID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn TaxonomicGroupColumn {
                get {
                    return this.columnTaxonomicGroup;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnitIdentifierColumn {
                get {
                    return this.columnUnitIdentifier;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn UnitDescriptionColumn {
                get {
                    return this.columnUnitDescription;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IdentificationUnitListRow this[int index] {
                get {
                    return ((IdentificationUnitListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event IdentificationUnitListRowChangeEventHandler IdentificationUnitListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event IdentificationUnitListRowChangeEventHandler IdentificationUnitListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event IdentificationUnitListRowChangeEventHandler IdentificationUnitListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event IdentificationUnitListRowChangeEventHandler IdentificationUnitListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddIdentificationUnitListRow(IdentificationUnitListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IdentificationUnitListRow AddIdentificationUnitListRow(CollectionSpecimenListRow parentCollectionSpecimenListRowByCollectionSpecimen_IdentificationUnit, int IdentificationUnitID, string LastIdentificationCache, int RelatedUnitID, string TaxonomicGroup, string UnitIdentifier, string UnitDescription, string Gender) {
                IdentificationUnitListRow rowIdentificationUnitListRow = ((IdentificationUnitListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        IdentificationUnitID,
                        LastIdentificationCache,
                        RelatedUnitID,
                        TaxonomicGroup,
                        UnitIdentifier,
                        UnitDescription,
                        Gender};
                if ((parentCollectionSpecimenListRowByCollectionSpecimen_IdentificationUnit != null)) {
                    columnValuesArray[0] = parentCollectionSpecimenListRowByCollectionSpecimen_IdentificationUnit[0];
                }
                rowIdentificationUnitListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowIdentificationUnitListRow);
                return rowIdentificationUnitListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IdentificationUnitListRow FindByCollectionSpecimenIDIdentificationUnitID(int CollectionSpecimenID, int IdentificationUnitID) {
                return ((IdentificationUnitListRow)(this.Rows.Find(new object[] {
                            CollectionSpecimenID,
                            IdentificationUnitID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                IdentificationUnitListDataTable cln = ((IdentificationUnitListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new IdentificationUnitListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCollectionSpecimenID = base.Columns["CollectionSpecimenID"];
                this.columnIdentificationUnitID = base.Columns["IdentificationUnitID"];
                this.columnLastIdentificationCache = base.Columns["LastIdentificationCache"];
                this.columnRelatedUnitID = base.Columns["RelatedUnitID"];
                this.columnTaxonomicGroup = base.Columns["TaxonomicGroup"];
                this.columnUnitIdentifier = base.Columns["UnitIdentifier"];
                this.columnUnitDescription = base.Columns["UnitDescription"];
                this.columnGender = base.Columns["Gender"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCollectionSpecimenID = new global::System.Data.DataColumn("CollectionSpecimenID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollectionSpecimenID);
                this.columnIdentificationUnitID = new global::System.Data.DataColumn("IdentificationUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdentificationUnitID);
                this.columnLastIdentificationCache = new global::System.Data.DataColumn("LastIdentificationCache", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastIdentificationCache);
                this.columnRelatedUnitID = new global::System.Data.DataColumn("RelatedUnitID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRelatedUnitID);
                this.columnTaxonomicGroup = new global::System.Data.DataColumn("TaxonomicGroup", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTaxonomicGroup);
                this.columnUnitIdentifier = new global::System.Data.DataColumn("UnitIdentifier", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitIdentifier);
                this.columnUnitDescription = new global::System.Data.DataColumn("UnitDescription", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitDescription);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCollectionSpecimenID,
                                this.columnIdentificationUnitID}, true));
                this.columnCollectionSpecimenID.AllowDBNull = false;
                this.columnIdentificationUnitID.AllowDBNull = false;
                this.columnLastIdentificationCache.MaxLength = 255;
                this.columnUnitIdentifier.MaxLength = 50;
                this.columnUnitDescription.MaxLength = 50;
                this.columnGender.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IdentificationUnitListRow NewIdentificationUnitListRow() {
                return ((IdentificationUnitListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new IdentificationUnitListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(IdentificationUnitListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.IdentificationUnitListRowChanged != null)) {
                    this.IdentificationUnitListRowChanged(this, new IdentificationUnitListRowChangeEvent(((IdentificationUnitListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.IdentificationUnitListRowChanging != null)) {
                    this.IdentificationUnitListRowChanging(this, new IdentificationUnitListRowChangeEvent(((IdentificationUnitListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.IdentificationUnitListRowDeleted != null)) {
                    this.IdentificationUnitListRowDeleted(this, new IdentificationUnitListRowChangeEvent(((IdentificationUnitListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.IdentificationUnitListRowDeleting != null)) {
                    this.IdentificationUnitListRowDeleting(this, new IdentificationUnitListRowChangeEvent(((IdentificationUnitListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveIdentificationUnitListRow(IdentificationUnitListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCollectionEventSeries ds = new DataSetCollectionEventSeries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "IdentificationUnitListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CollectionEventLocalisationListDataTable : global::System.Data.TypedTableBase<CollectionEventLocalisationListRow> {
            
            private global::System.Data.DataColumn columnCollectionEventID;
            
            private global::System.Data.DataColumn columnLocalisationSystemID;
            
            private global::System.Data.DataColumn columnLocation1;
            
            private global::System.Data.DataColumn columnLocation2;
            
            private global::System.Data.DataColumn columnLocationAccuracy;
            
            private global::System.Data.DataColumn columnLocationNotes;
            
            private global::System.Data.DataColumn columnDeterminationDate;
            
            private global::System.Data.DataColumn columnDistanceToLocation;
            
            private global::System.Data.DataColumn columnDirectionToLocation;
            
            private global::System.Data.DataColumn columnResponsibleName;
            
            private global::System.Data.DataColumn columnResponsibleAgentURI;
            
            private global::System.Data.DataColumn columnAverageAltitudeCache;
            
            private global::System.Data.DataColumn columnAverageLatitudeCache;
            
            private global::System.Data.DataColumn columnAverageLongitudeCache;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventLocalisationListDataTable() {
                this.TableName = "CollectionEventLocalisationList";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventLocalisationListDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected CollectionEventLocalisationListDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn CollectionEventIDColumn {
                get {
                    return this.columnCollectionEventID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LocalisationSystemIDColumn {
                get {
                    return this.columnLocalisationSystemID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Location1Column {
                get {
                    return this.columnLocation1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn Location2Column {
                get {
                    return this.columnLocation2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LocationAccuracyColumn {
                get {
                    return this.columnLocationAccuracy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn LocationNotesColumn {
                get {
                    return this.columnLocationNotes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DeterminationDateColumn {
                get {
                    return this.columnDeterminationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DistanceToLocationColumn {
                get {
                    return this.columnDistanceToLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn DirectionToLocationColumn {
                get {
                    return this.columnDirectionToLocation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ResponsibleNameColumn {
                get {
                    return this.columnResponsibleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ResponsibleAgentURIColumn {
                get {
                    return this.columnResponsibleAgentURI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AverageAltitudeCacheColumn {
                get {
                    return this.columnAverageAltitudeCache;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AverageLatitudeCacheColumn {
                get {
                    return this.columnAverageLatitudeCache;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn AverageLongitudeCacheColumn {
                get {
                    return this.columnAverageLongitudeCache;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventLocalisationListRow this[int index] {
                get {
                    return ((CollectionEventLocalisationListRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventLocalisationListRowChangeEventHandler CollectionEventLocalisationListRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventLocalisationListRowChangeEventHandler CollectionEventLocalisationListRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventLocalisationListRowChangeEventHandler CollectionEventLocalisationListRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventLocalisationListRowChangeEventHandler CollectionEventLocalisationListRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddCollectionEventLocalisationListRow(CollectionEventLocalisationListRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventLocalisationListRow AddCollectionEventLocalisationListRow(int CollectionEventID, int LocalisationSystemID, string Location1, string Location2, string LocationAccuracy, string LocationNotes, System.DateTime DeterminationDate, string DistanceToLocation, string DirectionToLocation, string ResponsibleName, string ResponsibleAgentURI, double AverageAltitudeCache, double AverageLatitudeCache, double AverageLongitudeCache) {
                CollectionEventLocalisationListRow rowCollectionEventLocalisationListRow = ((CollectionEventLocalisationListRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        CollectionEventID,
                        LocalisationSystemID,
                        Location1,
                        Location2,
                        LocationAccuracy,
                        LocationNotes,
                        DeterminationDate,
                        DistanceToLocation,
                        DirectionToLocation,
                        ResponsibleName,
                        ResponsibleAgentURI,
                        AverageAltitudeCache,
                        AverageLatitudeCache,
                        AverageLongitudeCache};
                rowCollectionEventLocalisationListRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCollectionEventLocalisationListRow);
                return rowCollectionEventLocalisationListRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventLocalisationListRow FindByCollectionEventIDLocalisationSystemID(int CollectionEventID, int LocalisationSystemID) {
                return ((CollectionEventLocalisationListRow)(this.Rows.Find(new object[] {
                            CollectionEventID,
                            LocalisationSystemID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CollectionEventLocalisationListDataTable cln = ((CollectionEventLocalisationListDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CollectionEventLocalisationListDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnCollectionEventID = base.Columns["CollectionEventID"];
                this.columnLocalisationSystemID = base.Columns["LocalisationSystemID"];
                this.columnLocation1 = base.Columns["Location1"];
                this.columnLocation2 = base.Columns["Location2"];
                this.columnLocationAccuracy = base.Columns["LocationAccuracy"];
                this.columnLocationNotes = base.Columns["LocationNotes"];
                this.columnDeterminationDate = base.Columns["DeterminationDate"];
                this.columnDistanceToLocation = base.Columns["DistanceToLocation"];
                this.columnDirectionToLocation = base.Columns["DirectionToLocation"];
                this.columnResponsibleName = base.Columns["ResponsibleName"];
                this.columnResponsibleAgentURI = base.Columns["ResponsibleAgentURI"];
                this.columnAverageAltitudeCache = base.Columns["AverageAltitudeCache"];
                this.columnAverageLatitudeCache = base.Columns["AverageLatitudeCache"];
                this.columnAverageLongitudeCache = base.Columns["AverageLongitudeCache"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnCollectionEventID = new global::System.Data.DataColumn("CollectionEventID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCollectionEventID);
                this.columnLocalisationSystemID = new global::System.Data.DataColumn("LocalisationSystemID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalisationSystemID);
                this.columnLocation1 = new global::System.Data.DataColumn("Location1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation1);
                this.columnLocation2 = new global::System.Data.DataColumn("Location2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocation2);
                this.columnLocationAccuracy = new global::System.Data.DataColumn("LocationAccuracy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationAccuracy);
                this.columnLocationNotes = new global::System.Data.DataColumn("LocationNotes", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocationNotes);
                this.columnDeterminationDate = new global::System.Data.DataColumn("DeterminationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeterminationDate);
                this.columnDistanceToLocation = new global::System.Data.DataColumn("DistanceToLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistanceToLocation);
                this.columnDirectionToLocation = new global::System.Data.DataColumn("DirectionToLocation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDirectionToLocation);
                this.columnResponsibleName = new global::System.Data.DataColumn("ResponsibleName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsibleName);
                this.columnResponsibleAgentURI = new global::System.Data.DataColumn("ResponsibleAgentURI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResponsibleAgentURI);
                this.columnAverageAltitudeCache = new global::System.Data.DataColumn("AverageAltitudeCache", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageAltitudeCache);
                this.columnAverageLatitudeCache = new global::System.Data.DataColumn("AverageLatitudeCache", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageLatitudeCache);
                this.columnAverageLongitudeCache = new global::System.Data.DataColumn("AverageLongitudeCache", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageLongitudeCache);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnCollectionEventID,
                                this.columnLocalisationSystemID}, true));
                this.columnCollectionEventID.AllowDBNull = false;
                this.columnLocalisationSystemID.AllowDBNull = false;
                this.columnLocation1.MaxLength = 255;
                this.columnLocation2.MaxLength = 255;
                this.columnLocationAccuracy.MaxLength = 50;
                this.columnLocationNotes.MaxLength = 2147483647;
                this.columnDistanceToLocation.MaxLength = 50;
                this.columnDirectionToLocation.MaxLength = 50;
                this.columnResponsibleName.MaxLength = 255;
                this.columnResponsibleAgentURI.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventLocalisationListRow NewCollectionEventLocalisationListRow() {
                return ((CollectionEventLocalisationListRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CollectionEventLocalisationListRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CollectionEventLocalisationListRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CollectionEventLocalisationListRowChanged != null)) {
                    this.CollectionEventLocalisationListRowChanged(this, new CollectionEventLocalisationListRowChangeEvent(((CollectionEventLocalisationListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CollectionEventLocalisationListRowChanging != null)) {
                    this.CollectionEventLocalisationListRowChanging(this, new CollectionEventLocalisationListRowChangeEvent(((CollectionEventLocalisationListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CollectionEventLocalisationListRowDeleted != null)) {
                    this.CollectionEventLocalisationListRowDeleted(this, new CollectionEventLocalisationListRowChangeEvent(((CollectionEventLocalisationListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CollectionEventLocalisationListRowDeleting != null)) {
                    this.CollectionEventLocalisationListRowDeleting(this, new CollectionEventLocalisationListRowChangeEvent(((CollectionEventLocalisationListRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveCollectionEventLocalisationListRow(CollectionEventLocalisationListRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCollectionEventSeries ds = new DataSetCollectionEventSeries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CollectionEventLocalisationListDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CollectionEventSeriesGeographyDataTable : global::System.Data.TypedTableBase<CollectionEventSeriesGeographyRow> {
            
            private global::System.Data.DataColumn columnSeriesID;
            
            private global::System.Data.DataColumn columnGeography;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesGeographyDataTable() {
                this.TableName = "CollectionEventSeriesGeography";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventSeriesGeographyDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [System.ObsoleteAttribute("This API supports obsolete formatter-based serialization. It should not be called" +
                " or extended by application code.", DiagnosticId="SYSLIB0051")]
            protected CollectionEventSeriesGeographyDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn SeriesIDColumn {
                get {
                    return this.columnSeriesID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn GeographyColumn {
                get {
                    return this.columnGeography;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesGeographyRow this[int index] {
                get {
                    return ((CollectionEventSeriesGeographyRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesGeographyRowChangeEventHandler CollectionEventSeriesGeographyRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesGeographyRowChangeEventHandler CollectionEventSeriesGeographyRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesGeographyRowChangeEventHandler CollectionEventSeriesGeographyRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event CollectionEventSeriesGeographyRowChangeEventHandler CollectionEventSeriesGeographyRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddCollectionEventSeriesGeographyRow(CollectionEventSeriesGeographyRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesGeographyRow AddCollectionEventSeriesGeographyRow(string Geography) {
                CollectionEventSeriesGeographyRow rowCollectionEventSeriesGeographyRow = ((CollectionEventSeriesGeographyRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Geography};
                rowCollectionEventSeriesGeographyRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCollectionEventSeriesGeographyRow);
                return rowCollectionEventSeriesGeographyRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesGeographyRow FindBySeriesID(int SeriesID) {
                return ((CollectionEventSeriesGeographyRow)(this.Rows.Find(new object[] {
                            SeriesID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CollectionEventSeriesGeographyDataTable cln = ((CollectionEventSeriesGeographyDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CollectionEventSeriesGeographyDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnSeriesID = base.Columns["SeriesID"];
                this.columnGeography = base.Columns["Geography"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnSeriesID = new global::System.Data.DataColumn("SeriesID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeriesID);
                this.columnGeography = new global::System.Data.DataColumn("Geography", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGeography);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnSeriesID}, true));
                this.columnSeriesID.AutoIncrement = true;
                this.columnSeriesID.AutoIncrementSeed = -1;
                this.columnSeriesID.AutoIncrementStep = -1;
                this.columnSeriesID.AllowDBNull = false;
                this.columnSeriesID.ReadOnly = true;
                this.columnSeriesID.Unique = true;
                this.columnGeography.Caption = "Description";
                this.columnGeography.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesGeographyRow NewCollectionEventSeriesGeographyRow() {
                return ((CollectionEventSeriesGeographyRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CollectionEventSeriesGeographyRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CollectionEventSeriesGeographyRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CollectionEventSeriesGeographyRowChanged != null)) {
                    this.CollectionEventSeriesGeographyRowChanged(this, new CollectionEventSeriesGeographyRowChangeEvent(((CollectionEventSeriesGeographyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CollectionEventSeriesGeographyRowChanging != null)) {
                    this.CollectionEventSeriesGeographyRowChanging(this, new CollectionEventSeriesGeographyRowChangeEvent(((CollectionEventSeriesGeographyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CollectionEventSeriesGeographyRowDeleted != null)) {
                    this.CollectionEventSeriesGeographyRowDeleted(this, new CollectionEventSeriesGeographyRowChangeEvent(((CollectionEventSeriesGeographyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CollectionEventSeriesGeographyRowDeleting != null)) {
                    this.CollectionEventSeriesGeographyRowDeleting(this, new CollectionEventSeriesGeographyRowChangeEvent(((CollectionEventSeriesGeographyRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveCollectionEventSeriesGeographyRow(CollectionEventSeriesGeographyRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetCollectionEventSeries ds = new DataSetCollectionEventSeries();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CollectionEventSeriesGeographyDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CollectionEventSeriesRow : global::System.Data.DataRow {
            
            private CollectionEventSeriesDataTable tableCollectionEventSeries;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventSeriesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCollectionEventSeries = ((CollectionEventSeriesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SeriesID {
                get {
                    return ((int)(this[this.tableCollectionEventSeries.SeriesIDColumn]));
                }
                set {
                    this[this.tableCollectionEventSeries.SeriesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SeriesParentID {
                get {
                    try {
                        return ((int)(this[this.tableCollectionEventSeries.SeriesParentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SeriesParentID in Tabelle CollectionEventSeries ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeries.SeriesParentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Description {
                get {
                    return ((string)(this[this.tableCollectionEventSeries.DescriptionColumn]));
                }
                set {
                    this[this.tableCollectionEventSeries.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string SeriesCode {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeries.SeriesCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SeriesCode in Tabelle CollectionEventSeries ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeries.SeriesCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeries.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Notes in Tabelle CollectionEventSeries ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeries.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DateStart {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCollectionEventSeries.DateStartColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DateStart in Tabelle CollectionEventSeries ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeries.DateStartColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DateEnd {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCollectionEventSeries.DateEndColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DateEnd in Tabelle CollectionEventSeries ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeries.DateEndColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DateSupplement {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeries.DateSupplementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DateSupplement in Tabelle CollectionEventSeries ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeries.DateSupplementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesRow CollectionEventSeriesRowParent {
                get {
                    return ((CollectionEventSeriesRow)(this.GetParentRow(this.Table.ParentRelations["FK_CollectionEventSeries_CollectionEventSeries"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CollectionEventSeries_CollectionEventSeries"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSeriesParentIDNull() {
                return this.IsNull(this.tableCollectionEventSeries.SeriesParentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSeriesParentIDNull() {
                this[this.tableCollectionEventSeries.SeriesParentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSeriesCodeNull() {
                return this.IsNull(this.tableCollectionEventSeries.SeriesCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSeriesCodeNull() {
                this[this.tableCollectionEventSeries.SeriesCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tableCollectionEventSeries.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNotesNull() {
                this[this.tableCollectionEventSeries.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDateStartNull() {
                return this.IsNull(this.tableCollectionEventSeries.DateStartColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDateStartNull() {
                this[this.tableCollectionEventSeries.DateStartColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDateEndNull() {
                return this.IsNull(this.tableCollectionEventSeries.DateEndColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDateEndNull() {
                this[this.tableCollectionEventSeries.DateEndColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDateSupplementNull() {
                return this.IsNull(this.tableCollectionEventSeries.DateSupplementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDateSupplementNull() {
                this[this.tableCollectionEventSeries.DateSupplementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesImageRow[] GetCollectionEventSeriesImageRows() {
                if ((this.Table.ChildRelations["FK_CollectionEventSeriesImage_CollectionEventSeries"] == null)) {
                    return new CollectionEventSeriesImageRow[0];
                }
                else {
                    return ((CollectionEventSeriesImageRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CollectionEventSeriesImage_CollectionEventSeries"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventListRow[] GetCollectionEventListRows() {
                if ((this.Table.ChildRelations["CollectionEventSeries_CollectionEvent"] == null)) {
                    return new CollectionEventListRow[0];
                }
                else {
                    return ((CollectionEventListRow[])(base.GetChildRows(this.Table.ChildRelations["CollectionEventSeries_CollectionEvent"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesRow[] GetCollectionEventSeriesRows() {
                if ((this.Table.ChildRelations["FK_CollectionEventSeries_CollectionEventSeries"] == null)) {
                    return new CollectionEventSeriesRow[0];
                }
                else {
                    return ((CollectionEventSeriesRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CollectionEventSeries_CollectionEventSeries"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CollectionEventSeriesImageRow : global::System.Data.DataRow {
            
            private CollectionEventSeriesImageDataTable tableCollectionEventSeriesImage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventSeriesImageRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCollectionEventSeriesImage = ((CollectionEventSeriesImageDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SeriesID {
                get {
                    return ((int)(this[this.tableCollectionEventSeriesImage.SeriesIDColumn]));
                }
                set {
                    this[this.tableCollectionEventSeriesImage.SeriesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string URI {
                get {
                    return ((string)(this[this.tableCollectionEventSeriesImage.URIColumn]));
                }
                set {
                    this[this.tableCollectionEventSeriesImage.URIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ResourceURI {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.ResourceURIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte ResourceURI in Tabelle CollectionEventSeriesImage ist DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.ResourceURIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ImageType {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.ImageTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte ImageType in Tabelle CollectionEventSeriesImage ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.ImageTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Notes {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.NotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Notes in Tabelle CollectionEventSeriesImage ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.NotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DataWithholdingReason {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.DataWithholdingReasonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DataWithholdingReason in Tabelle CollectionEventSeriesImage i" +
                                "st DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.DataWithholdingReasonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.DescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Description in Tabelle CollectionEventSeriesImage ist DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.DescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Title in Tabelle CollectionEventSeriesImage ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string IPR {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.IPRColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte IPR in Tabelle CollectionEventSeriesImage ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.IPRColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatorAgent {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.CreatorAgentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte CreatorAgent in Tabelle CollectionEventSeriesImage ist DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.CreatorAgentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CreatorAgentURI {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.CreatorAgentURIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte CreatorAgentURI in Tabelle CollectionEventSeriesImage ist DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.CreatorAgentURIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CopyrightStatement {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.CopyrightStatementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte CopyrightStatement in Tabelle CollectionEventSeriesImage ist " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.CopyrightStatementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LicenseType {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.LicenseTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte LicenseType in Tabelle CollectionEventSeriesImage ist DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.LicenseTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string InternalNotes {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.InternalNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte InternalNotes in Tabelle CollectionEventSeriesImage ist DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.InternalNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LicenseHolder {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.LicenseHolderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte LicenseHolder in Tabelle CollectionEventSeriesImage ist DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.LicenseHolderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LicenseHolderAgentURI {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.LicenseHolderAgentURIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte LicenseHolderAgentURI in Tabelle CollectionEventSeriesImage i" +
                                "st DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.LicenseHolderAgentURIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LicenseYear {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesImage.LicenseYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte LicenseYear in Tabelle CollectionEventSeriesImage ist DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesImage.LicenseYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesRow CollectionEventSeriesRow {
                get {
                    return ((CollectionEventSeriesRow)(this.GetParentRow(this.Table.ParentRelations["FK_CollectionEventSeriesImage_CollectionEventSeries"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CollectionEventSeriesImage_CollectionEventSeries"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsResourceURINull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.ResourceURIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetResourceURINull() {
                this[this.tableCollectionEventSeriesImage.ResourceURIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsImageTypeNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.ImageTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetImageTypeNull() {
                this[this.tableCollectionEventSeriesImage.ImageTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsNotesNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.NotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetNotesNull() {
                this[this.tableCollectionEventSeriesImage.NotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDataWithholdingReasonNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.DataWithholdingReasonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDataWithholdingReasonNull() {
                this[this.tableCollectionEventSeriesImage.DataWithholdingReasonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.DescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDescriptionNull() {
                this[this.tableCollectionEventSeriesImage.DescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTitleNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTitleNull() {
                this[this.tableCollectionEventSeriesImage.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsIPRNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.IPRColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetIPRNull() {
                this[this.tableCollectionEventSeriesImage.IPRColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCreatorAgentNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.CreatorAgentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCreatorAgentNull() {
                this[this.tableCollectionEventSeriesImage.CreatorAgentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCreatorAgentURINull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.CreatorAgentURIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCreatorAgentURINull() {
                this[this.tableCollectionEventSeriesImage.CreatorAgentURIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCopyrightStatementNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.CopyrightStatementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCopyrightStatementNull() {
                this[this.tableCollectionEventSeriesImage.CopyrightStatementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLicenseTypeNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.LicenseTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLicenseTypeNull() {
                this[this.tableCollectionEventSeriesImage.LicenseTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsInternalNotesNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.InternalNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetInternalNotesNull() {
                this[this.tableCollectionEventSeriesImage.InternalNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLicenseHolderNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.LicenseHolderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLicenseHolderNull() {
                this[this.tableCollectionEventSeriesImage.LicenseHolderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLicenseHolderAgentURINull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.LicenseHolderAgentURIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLicenseHolderAgentURINull() {
                this[this.tableCollectionEventSeriesImage.LicenseHolderAgentURIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLicenseYearNull() {
                return this.IsNull(this.tableCollectionEventSeriesImage.LicenseYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLicenseYearNull() {
                this[this.tableCollectionEventSeriesImage.LicenseYearColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CollectionEventSeriesDescriptorRow : global::System.Data.DataRow {
            
            private CollectionEventSeriesDescriptorDataTable tableCollectionEventSeriesDescriptor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventSeriesDescriptorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCollectionEventSeriesDescriptor = ((CollectionEventSeriesDescriptorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SeriesID {
                get {
                    return ((int)(this[this.tableCollectionEventSeriesDescriptor.SeriesIDColumn]));
                }
                set {
                    this[this.tableCollectionEventSeriesDescriptor.SeriesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int DescriptorID {
                get {
                    return ((int)(this[this.tableCollectionEventSeriesDescriptor.DescriptorIDColumn]));
                }
                set {
                    this[this.tableCollectionEventSeriesDescriptor.DescriptorIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Descriptor {
                get {
                    return ((string)(this[this.tableCollectionEventSeriesDescriptor.DescriptorColumn]));
                }
                set {
                    this[this.tableCollectionEventSeriesDescriptor.DescriptorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string URL {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesDescriptor.URLColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte URL in Tabelle CollectionEventSeriesDescriptor ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesDescriptor.URLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DescriptorType {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesDescriptor.DescriptorTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DescriptorType in Tabelle CollectionEventSeriesDescriptor ist" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesDescriptor.DescriptorTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsURLNull() {
                return this.IsNull(this.tableCollectionEventSeriesDescriptor.URLColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetURLNull() {
                this[this.tableCollectionEventSeriesDescriptor.URLColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDescriptorTypeNull() {
                return this.IsNull(this.tableCollectionEventSeriesDescriptor.DescriptorTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDescriptorTypeNull() {
                this[this.tableCollectionEventSeriesDescriptor.DescriptorTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CollectionEventListRow : global::System.Data.DataRow {
            
            private CollectionEventListDataTable tableCollectionEventList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCollectionEventList = ((CollectionEventListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CollectionEventID {
                get {
                    return ((int)(this[this.tableCollectionEventList.CollectionEventIDColumn]));
                }
                set {
                    this[this.tableCollectionEventList.CollectionEventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SeriesID {
                get {
                    try {
                        return ((int)(this[this.tableCollectionEventList.SeriesIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte SeriesID in Tabelle CollectionEventList ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventList.SeriesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DisplayText {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventList.DisplayTextColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DisplayText in Tabelle CollectionEventList ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventList.DisplayTextColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string CollectionDate {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventList.CollectionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte CollectionDate in Tabelle CollectionEventList ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventList.CollectionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventLocalisationListRow CollectionEventLocalisationListRow {
                get {
                    return ((CollectionEventLocalisationListRow)(this.GetParentRow(this.Table.ParentRelations["CollectionEventLocalisation_CollectionEventList"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CollectionEventLocalisation_CollectionEventList"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesRow CollectionEventSeriesRow {
                get {
                    return ((CollectionEventSeriesRow)(this.GetParentRow(this.Table.ParentRelations["CollectionEventSeries_CollectionEvent"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CollectionEventSeries_CollectionEvent"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsSeriesIDNull() {
                return this.IsNull(this.tableCollectionEventList.SeriesIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetSeriesIDNull() {
                this[this.tableCollectionEventList.SeriesIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDisplayTextNull() {
                return this.IsNull(this.tableCollectionEventList.DisplayTextColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDisplayTextNull() {
                this[this.tableCollectionEventList.DisplayTextColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCollectionDateNull() {
                return this.IsNull(this.tableCollectionEventList.CollectionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCollectionDateNull() {
                this[this.tableCollectionEventList.CollectionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionSpecimenListRow[] GetCollectionSpecimenListRows() {
                if ((this.Table.ChildRelations["CollectionEvent_CollectionSpecimen"] == null)) {
                    return new CollectionSpecimenListRow[0];
                }
                else {
                    return ((CollectionSpecimenListRow[])(base.GetChildRows(this.Table.ChildRelations["CollectionEvent_CollectionSpecimen"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CollectionSpecimenListRow : global::System.Data.DataRow {
            
            private CollectionSpecimenListDataTable tableCollectionSpecimenList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionSpecimenListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCollectionSpecimenList = ((CollectionSpecimenListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CollectionSpecimenID {
                get {
                    return ((int)(this[this.tableCollectionSpecimenList.CollectionSpecimenIDColumn]));
                }
                set {
                    this[this.tableCollectionSpecimenList.CollectionSpecimenIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CollectionEventID {
                get {
                    try {
                        return ((int)(this[this.tableCollectionSpecimenList.CollectionEventIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte CollectionEventID in Tabelle CollectionSpecimenList ist DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCollectionSpecimenList.CollectionEventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string AccessionNumber {
                get {
                    try {
                        return ((string)(this[this.tableCollectionSpecimenList.AccessionNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte AccessionNumber in Tabelle CollectionSpecimenList ist DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCollectionSpecimenList.AccessionNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventListRow CollectionEventRow {
                get {
                    return ((CollectionEventListRow)(this.GetParentRow(this.Table.ParentRelations["CollectionEvent_CollectionSpecimen"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CollectionEvent_CollectionSpecimen"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsCollectionEventIDNull() {
                return this.IsNull(this.tableCollectionSpecimenList.CollectionEventIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetCollectionEventIDNull() {
                this[this.tableCollectionSpecimenList.CollectionEventIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAccessionNumberNull() {
                return this.IsNull(this.tableCollectionSpecimenList.AccessionNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAccessionNumberNull() {
                this[this.tableCollectionSpecimenList.AccessionNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IdentificationUnitListRow[] GetIdentificationUnitListRows() {
                if ((this.Table.ChildRelations["CollectionSpecimen_IdentificationUnit"] == null)) {
                    return new IdentificationUnitListRow[0];
                }
                else {
                    return ((IdentificationUnitListRow[])(base.GetChildRows(this.Table.ChildRelations["CollectionSpecimen_IdentificationUnit"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class IdentificationUnitListRow : global::System.Data.DataRow {
            
            private IdentificationUnitListDataTable tableIdentificationUnitList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal IdentificationUnitListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableIdentificationUnitList = ((IdentificationUnitListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CollectionSpecimenID {
                get {
                    return ((int)(this[this.tableIdentificationUnitList.CollectionSpecimenIDColumn]));
                }
                set {
                    this[this.tableIdentificationUnitList.CollectionSpecimenIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int IdentificationUnitID {
                get {
                    return ((int)(this[this.tableIdentificationUnitList.IdentificationUnitIDColumn]));
                }
                set {
                    this[this.tableIdentificationUnitList.IdentificationUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LastIdentificationCache {
                get {
                    try {
                        return ((string)(this[this.tableIdentificationUnitList.LastIdentificationCacheColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte LastIdentificationCache in Tabelle IdentificationUnitList ist" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableIdentificationUnitList.LastIdentificationCacheColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int RelatedUnitID {
                get {
                    try {
                        return ((int)(this[this.tableIdentificationUnitList.RelatedUnitIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte RelatedUnitID in Tabelle IdentificationUnitList ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableIdentificationUnitList.RelatedUnitIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string TaxonomicGroup {
                get {
                    try {
                        return ((string)(this[this.tableIdentificationUnitList.TaxonomicGroupColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte TaxonomicGroup in Tabelle IdentificationUnitList ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableIdentificationUnitList.TaxonomicGroupColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UnitIdentifier {
                get {
                    try {
                        return ((string)(this[this.tableIdentificationUnitList.UnitIdentifierColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte UnitIdentifier in Tabelle IdentificationUnitList ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableIdentificationUnitList.UnitIdentifierColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string UnitDescription {
                get {
                    try {
                        return ((string)(this[this.tableIdentificationUnitList.UnitDescriptionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte UnitDescription in Tabelle IdentificationUnitList ist DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableIdentificationUnitList.UnitDescriptionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Gender {
                get {
                    try {
                        return ((string)(this[this.tableIdentificationUnitList.GenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Gender in Tabelle IdentificationUnitList ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableIdentificationUnitList.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionSpecimenListRow CollectionSpecimenRow {
                get {
                    return ((CollectionSpecimenListRow)(this.GetParentRow(this.Table.ParentRelations["CollectionSpecimen_IdentificationUnit"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CollectionSpecimen_IdentificationUnit"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLastIdentificationCacheNull() {
                return this.IsNull(this.tableIdentificationUnitList.LastIdentificationCacheColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLastIdentificationCacheNull() {
                this[this.tableIdentificationUnitList.LastIdentificationCacheColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsRelatedUnitIDNull() {
                return this.IsNull(this.tableIdentificationUnitList.RelatedUnitIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetRelatedUnitIDNull() {
                this[this.tableIdentificationUnitList.RelatedUnitIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsTaxonomicGroupNull() {
                return this.IsNull(this.tableIdentificationUnitList.TaxonomicGroupColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetTaxonomicGroupNull() {
                this[this.tableIdentificationUnitList.TaxonomicGroupColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnitIdentifierNull() {
                return this.IsNull(this.tableIdentificationUnitList.UnitIdentifierColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnitIdentifierNull() {
                this[this.tableIdentificationUnitList.UnitIdentifierColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsUnitDescriptionNull() {
                return this.IsNull(this.tableIdentificationUnitList.UnitDescriptionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetUnitDescriptionNull() {
                this[this.tableIdentificationUnitList.UnitDescriptionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGenderNull() {
                return this.IsNull(this.tableIdentificationUnitList.GenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGenderNull() {
                this[this.tableIdentificationUnitList.GenderColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CollectionEventLocalisationListRow : global::System.Data.DataRow {
            
            private CollectionEventLocalisationListDataTable tableCollectionEventLocalisationList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventLocalisationListRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCollectionEventLocalisationList = ((CollectionEventLocalisationListDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int CollectionEventID {
                get {
                    return ((int)(this[this.tableCollectionEventLocalisationList.CollectionEventIDColumn]));
                }
                set {
                    this[this.tableCollectionEventLocalisationList.CollectionEventIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int LocalisationSystemID {
                get {
                    return ((int)(this[this.tableCollectionEventLocalisationList.LocalisationSystemIDColumn]));
                }
                set {
                    this[this.tableCollectionEventLocalisationList.LocalisationSystemIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Location1 {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventLocalisationList.Location1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Location1 in Tabelle CollectionEventLocalisationList ist DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.Location1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Location2 {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventLocalisationList.Location2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Location2 in Tabelle CollectionEventLocalisationList ist DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.Location2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LocationAccuracy {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventLocalisationList.LocationAccuracyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte LocationAccuracy in Tabelle CollectionEventLocalisationList i" +
                                "st DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.LocationAccuracyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string LocationNotes {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventLocalisationList.LocationNotesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte LocationNotes in Tabelle CollectionEventLocalisationList ist " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.LocationNotesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime DeterminationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableCollectionEventLocalisationList.DeterminationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DeterminationDate in Tabelle CollectionEventLocalisationList " +
                                "ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.DeterminationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DistanceToLocation {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventLocalisationList.DistanceToLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DistanceToLocation in Tabelle CollectionEventLocalisationList" +
                                " ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.DistanceToLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string DirectionToLocation {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventLocalisationList.DirectionToLocationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte DirectionToLocation in Tabelle CollectionEventLocalisationLis" +
                                "t ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.DirectionToLocationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ResponsibleName {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventLocalisationList.ResponsibleNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte ResponsibleName in Tabelle CollectionEventLocalisationList is" +
                                "t DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.ResponsibleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ResponsibleAgentURI {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventLocalisationList.ResponsibleAgentURIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte ResponsibleAgentURI in Tabelle CollectionEventLocalisationLis" +
                                "t ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.ResponsibleAgentURIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double AverageAltitudeCache {
                get {
                    try {
                        return ((double)(this[this.tableCollectionEventLocalisationList.AverageAltitudeCacheColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte AverageAltitudeCache in Tabelle CollectionEventLocalisationLi" +
                                "st ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.AverageAltitudeCacheColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double AverageLatitudeCache {
                get {
                    try {
                        return ((double)(this[this.tableCollectionEventLocalisationList.AverageLatitudeCacheColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte AverageLatitudeCache in Tabelle CollectionEventLocalisationLi" +
                                "st ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.AverageLatitudeCacheColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public double AverageLongitudeCache {
                get {
                    try {
                        return ((double)(this[this.tableCollectionEventLocalisationList.AverageLongitudeCacheColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte AverageLongitudeCache in Tabelle CollectionEventLocalisationL" +
                                "ist ist DBNull.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventLocalisationList.AverageLongitudeCacheColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLocation1Null() {
                return this.IsNull(this.tableCollectionEventLocalisationList.Location1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLocation1Null() {
                this[this.tableCollectionEventLocalisationList.Location1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLocation2Null() {
                return this.IsNull(this.tableCollectionEventLocalisationList.Location2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLocation2Null() {
                this[this.tableCollectionEventLocalisationList.Location2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLocationAccuracyNull() {
                return this.IsNull(this.tableCollectionEventLocalisationList.LocationAccuracyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLocationAccuracyNull() {
                this[this.tableCollectionEventLocalisationList.LocationAccuracyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsLocationNotesNull() {
                return this.IsNull(this.tableCollectionEventLocalisationList.LocationNotesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetLocationNotesNull() {
                this[this.tableCollectionEventLocalisationList.LocationNotesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDeterminationDateNull() {
                return this.IsNull(this.tableCollectionEventLocalisationList.DeterminationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDeterminationDateNull() {
                this[this.tableCollectionEventLocalisationList.DeterminationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDistanceToLocationNull() {
                return this.IsNull(this.tableCollectionEventLocalisationList.DistanceToLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDistanceToLocationNull() {
                this[this.tableCollectionEventLocalisationList.DistanceToLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsDirectionToLocationNull() {
                return this.IsNull(this.tableCollectionEventLocalisationList.DirectionToLocationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetDirectionToLocationNull() {
                this[this.tableCollectionEventLocalisationList.DirectionToLocationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsResponsibleNameNull() {
                return this.IsNull(this.tableCollectionEventLocalisationList.ResponsibleNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetResponsibleNameNull() {
                this[this.tableCollectionEventLocalisationList.ResponsibleNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsResponsibleAgentURINull() {
                return this.IsNull(this.tableCollectionEventLocalisationList.ResponsibleAgentURIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetResponsibleAgentURINull() {
                this[this.tableCollectionEventLocalisationList.ResponsibleAgentURIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAverageAltitudeCacheNull() {
                return this.IsNull(this.tableCollectionEventLocalisationList.AverageAltitudeCacheColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAverageAltitudeCacheNull() {
                this[this.tableCollectionEventLocalisationList.AverageAltitudeCacheColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAverageLatitudeCacheNull() {
                return this.IsNull(this.tableCollectionEventLocalisationList.AverageLatitudeCacheColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAverageLatitudeCacheNull() {
                this[this.tableCollectionEventLocalisationList.AverageLatitudeCacheColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsAverageLongitudeCacheNull() {
                return this.IsNull(this.tableCollectionEventLocalisationList.AverageLongitudeCacheColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetAverageLongitudeCacheNull() {
                this[this.tableCollectionEventLocalisationList.AverageLongitudeCacheColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventListRow[] GetCollectionEventListRows() {
                if ((this.Table.ChildRelations["CollectionEventLocalisation_CollectionEventList"] == null)) {
                    return new CollectionEventListRow[0];
                }
                else {
                    return ((CollectionEventListRow[])(base.GetChildRows(this.Table.ChildRelations["CollectionEventLocalisation_CollectionEventList"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CollectionEventSeriesGeographyRow : global::System.Data.DataRow {
            
            private CollectionEventSeriesGeographyDataTable tableCollectionEventSeriesGeography;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal CollectionEventSeriesGeographyRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCollectionEventSeriesGeography = ((CollectionEventSeriesGeographyDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int SeriesID {
                get {
                    return ((int)(this[this.tableCollectionEventSeriesGeography.SeriesIDColumn]));
                }
                set {
                    this[this.tableCollectionEventSeriesGeography.SeriesIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string Geography {
                get {
                    try {
                        return ((string)(this[this.tableCollectionEventSeriesGeography.GeographyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Der Wert für Spalte Geography in Tabelle CollectionEventSeriesGeography ist DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableCollectionEventSeriesGeography.GeographyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsGeographyNull() {
                return this.IsNull(this.tableCollectionEventSeriesGeography.GeographyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetGeographyNull() {
                this[this.tableCollectionEventSeriesGeography.GeographyColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class CollectionEventSeriesRowChangeEvent : global::System.EventArgs {
            
            private CollectionEventSeriesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesRowChangeEvent(CollectionEventSeriesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class CollectionEventSeriesImageRowChangeEvent : global::System.EventArgs {
            
            private CollectionEventSeriesImageRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesImageRowChangeEvent(CollectionEventSeriesImageRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesImageRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class CollectionEventSeriesDescriptorRowChangeEvent : global::System.EventArgs {
            
            private CollectionEventSeriesDescriptorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesDescriptorRowChangeEvent(CollectionEventSeriesDescriptorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesDescriptorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class CollectionEventListRowChangeEvent : global::System.EventArgs {
            
            private CollectionEventListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventListRowChangeEvent(CollectionEventListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class CollectionSpecimenListRowChangeEvent : global::System.EventArgs {
            
            private CollectionSpecimenListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionSpecimenListRowChangeEvent(CollectionSpecimenListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionSpecimenListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class IdentificationUnitListRowChangeEvent : global::System.EventArgs {
            
            private IdentificationUnitListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IdentificationUnitListRowChangeEvent(IdentificationUnitListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public IdentificationUnitListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class CollectionEventLocalisationListRowChangeEvent : global::System.EventArgs {
            
            private CollectionEventLocalisationListRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventLocalisationListRowChangeEvent(CollectionEventLocalisationListRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventLocalisationListRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class CollectionEventSeriesGeographyRowChangeEvent : global::System.EventArgs {
            
            private CollectionEventSeriesGeographyRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesGeographyRowChangeEvent(CollectionEventSeriesGeographyRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public CollectionEventSeriesGeographyRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DiversityCollection.Datasets.DataSetCollectionEventSeriesTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CollectionEventSeriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::Microsoft.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::Microsoft.Data.SqlClient.SqlConnection _connection;
        
        private global::Microsoft.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public CollectionEventSeriesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::Microsoft.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Microsoft.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Microsoft.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Microsoft.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Microsoft.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CollectionEventSeries";
            tableMapping.ColumnMappings.Add("SeriesID", "SeriesID");
            tableMapping.ColumnMappings.Add("SeriesParentID", "SeriesParentID");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("SeriesCode", "SeriesCode");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("DateCache", "DateStart");
            tableMapping.ColumnMappings.Add("DateStart", "DateStart");
            tableMapping.ColumnMappings.Add("DateEnd", "DateEnd");
            tableMapping.ColumnMappings.Add("DateSupplement", "DateSupplement");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [CollectionEventSeries] WHERE (([SeriesID] = @Original_SeriesID) AND ((@IsNull_SeriesParentID = 1 AND [SeriesParentID] IS NULL) OR ([SeriesParentID] = @Original_SeriesParentID)) AND ((@IsNull_SeriesCode = 1 AND [SeriesCode] IS NULL) OR ([SeriesCode] = @Original_SeriesCode)) AND ((@IsNull_DateStart = 1 AND [DateStart] IS NULL) OR ([DateStart] = @Original_DateStart)) AND ((@IsNull_DateEnd = 1 AND [DateEnd] IS NULL) OR ([DateEnd] = @Original_DateEnd)) AND ((@IsNull_DateSupplement = 1 AND [DateSupplement] IS NULL) OR ([DateSupplement] = @Original_DateSupplement)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Microsoft.Data.SqlClient.SqlParameter param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SeriesID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_SeriesParentID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesParentID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SeriesParentID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesParentID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_SeriesCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SeriesCode";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "SeriesCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DateStart";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DateStart";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DateStart";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "DateStart";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DateEnd";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DateEnd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DateEnd";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "DateEnd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DateSupplement";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DateSupplement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DateSupplement";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DateSupplement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [CollectionEventSeries] ([SeriesParentID], [Description], [SeriesCode], [Notes], [DateStart], [DateEnd], [DateSupplement]) VALUES (@SeriesParentID, @Description, @SeriesCode, @Notes, @DateStart, @DateEnd, @DateSupplement);
SELECT SeriesID, SeriesParentID, Description, SeriesCode, Notes, DateStart, DateEnd, DateSupplement FROM CollectionEventSeries WHERE (SeriesID = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@SeriesParentID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesParentID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Description";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Description";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@SeriesCode";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "SeriesCode";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Notes";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Notes";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DateStart";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "DateStart";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DateEnd";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "DateEnd";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DateSupplement";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DateSupplement";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [CollectionEventSeries] SET [SeriesParentID] = @SeriesParentID, [Description] = @Description, [SeriesCode] = @SeriesCode, [Notes] = @Notes, [DateStart] = @DateStart, [DateEnd] = @DateEnd, [DateSupplement] = @DateSupplement WHERE (([SeriesID] = @Original_SeriesID) AND ((@IsNull_SeriesParentID = 1 AND [SeriesParentID] IS NULL) OR ([SeriesParentID] = @Original_SeriesParentID)) AND ((@IsNull_SeriesCode = 1 AND [SeriesCode] IS NULL) OR ([SeriesCode] = @Original_SeriesCode)) AND ((@IsNull_DateStart = 1 AND [DateStart] IS NULL) OR ([DateStart] = @Original_DateStart)) AND ((@IsNull_DateEnd = 1 AND [DateEnd] IS NULL) OR ([DateEnd] = @Original_DateEnd)) AND ((@IsNull_DateSupplement = 1 AND [DateSupplement] IS NULL) OR ([DateSupplement] = @Original_DateSupplement)));
SELECT SeriesID, SeriesParentID, Description, SeriesCode, Notes, DateStart, DateEnd, DateSupplement FROM CollectionEventSeries WHERE (SeriesID = @SeriesID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@SeriesParentID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesParentID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Description";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Description";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@SeriesCode";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "SeriesCode";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Notes";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Notes";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DateStart";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "DateStart";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DateEnd";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "DateEnd";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DateSupplement";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DateSupplement";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SeriesID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_SeriesParentID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesParentID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SeriesParentID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesParentID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_SeriesCode";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SeriesCode";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "SeriesCode";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DateStart";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DateStart";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DateStart";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "DateStart";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DateEnd";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DateEnd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DateEnd";
            param.DbType = global::System.Data.DbType.DateTime;
            param.SqlDbType = global::System.Data.SqlDbType.DateTime;
            param.IsNullable = true;
            param.SourceColumn = "DateEnd";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DateSupplement";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DateSupplement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DateSupplement";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DateSupplement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@SeriesID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "SeriesID";
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Microsoft.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DiversityCollection.Properties.Settings.Default.DiversityCollection_TestConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Microsoft.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        SeriesID, SeriesParentID, Description, SeriesCode, Notes, DateStart" +
                ", DateEnd, DateSupplement\r\nFROM            CollectionEventSeries";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetCollectionEventSeries.CollectionEventSeriesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetCollectionEventSeries.CollectionEventSeriesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetCollectionEventSeries.CollectionEventSeriesDataTable dataTable = new DataSetCollectionEventSeries.CollectionEventSeriesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetCollectionEventSeries.CollectionEventSeriesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetCollectionEventSeries dataSet) {
            return this.Adapter.Update(dataSet, "CollectionEventSeries");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_SeriesID, global::System.Nullable<int> Original_SeriesParentID, string Original_SeriesCode, global::System.Nullable<global::System.DateTime> Original_DateStart, global::System.Nullable<global::System.DateTime> Original_DateEnd, string Original_DateSupplement) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SeriesID));
            if ((Original_SeriesParentID.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_SeriesParentID.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_SeriesCode == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_SeriesCode));
            }
            if ((Original_DateStart.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_DateStart.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_DateEnd.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_DateEnd.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_DateSupplement == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_DateSupplement));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> SeriesParentID, string Description, string SeriesCode, string Notes, global::System.Nullable<global::System.DateTime> DateStart, global::System.Nullable<global::System.DateTime> DateEnd, string DateSupplement) {
            if ((SeriesParentID.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SeriesParentID.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Description));
            }
            if ((SeriesCode == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(SeriesCode));
            }
            if ((Notes == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Notes));
            }
            if ((DateStart.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(DateStart.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((DateEnd.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(DateEnd.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DateSupplement == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(DateSupplement));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> SeriesParentID, string Description, string SeriesCode, string Notes, global::System.Nullable<global::System.DateTime> DateStart, global::System.Nullable<global::System.DateTime> DateEnd, string DateSupplement, int Original_SeriesID, global::System.Nullable<int> Original_SeriesParentID, string Original_SeriesCode, global::System.Nullable<global::System.DateTime> Original_DateStart, global::System.Nullable<global::System.DateTime> Original_DateEnd, string Original_DateSupplement, int SeriesID) {
            if ((SeriesParentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SeriesParentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Description == null)) {
                throw new global::System.ArgumentNullException("Description");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Description));
            }
            if ((SeriesCode == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(SeriesCode));
            }
            if ((Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Notes));
            }
            if ((DateStart.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(DateStart.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((DateEnd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(DateEnd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((DateSupplement == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(DateSupplement));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_SeriesID));
            if ((Original_SeriesParentID.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(Original_SeriesParentID.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_SeriesCode == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_SeriesCode));
            }
            if ((Original_DateStart.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_DateStart.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_DateEnd.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((System.DateTime)(Original_DateEnd.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_DateSupplement == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_DateSupplement));
            }
            this.Adapter.UpdateCommand.Parameters[18].Value = ((int)(SeriesID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> SeriesParentID, string Description, string SeriesCode, string Notes, global::System.Nullable<global::System.DateTime> DateStart, global::System.Nullable<global::System.DateTime> DateEnd, string DateSupplement, int Original_SeriesID, global::System.Nullable<int> Original_SeriesParentID, string Original_SeriesCode, global::System.Nullable<global::System.DateTime> Original_DateStart, global::System.Nullable<global::System.DateTime> Original_DateEnd, string Original_DateSupplement) {
            return this.Update(SeriesParentID, Description, SeriesCode, Notes, DateStart, DateEnd, DateSupplement, Original_SeriesID, Original_SeriesParentID, Original_SeriesCode, Original_DateStart, Original_DateEnd, Original_DateSupplement, Original_SeriesID);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CollectionEventSeriesImageTableAdapter : global::System.ComponentModel.Component {
        
        private global::Microsoft.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::Microsoft.Data.SqlClient.SqlConnection _connection;
        
        private global::Microsoft.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public CollectionEventSeriesImageTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::Microsoft.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Microsoft.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Microsoft.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Microsoft.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Microsoft.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CollectionEventSeriesImage";
            tableMapping.ColumnMappings.Add("SeriesID", "SeriesID");
            tableMapping.ColumnMappings.Add("URI", "URI");
            tableMapping.ColumnMappings.Add("ResourceURI", "ResourceURI");
            tableMapping.ColumnMappings.Add("ImageType", "ImageType");
            tableMapping.ColumnMappings.Add("Notes", "Notes");
            tableMapping.ColumnMappings.Add("DataWithholdingReason", "DataWithholdingReason");
            tableMapping.ColumnMappings.Add("Description", "Description");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("IPR", "IPR");
            tableMapping.ColumnMappings.Add("CreatorAgent", "CreatorAgent");
            tableMapping.ColumnMappings.Add("CreatorAgentURI", "CreatorAgentURI");
            tableMapping.ColumnMappings.Add("CopyrightStatement", "CopyrightStatement");
            tableMapping.ColumnMappings.Add("LicenseType", "LicenseType");
            tableMapping.ColumnMappings.Add("InternalNotes", "InternalNotes");
            tableMapping.ColumnMappings.Add("LicenseHolder", "LicenseHolder");
            tableMapping.ColumnMappings.Add("LicenseHolderAgentURI", "LicenseHolderAgentURI");
            tableMapping.ColumnMappings.Add("LicenseYear", "LicenseYear");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [CollectionEventSeriesImage] WHERE (([SeriesID] = @Original_SeriesID)" +
                " AND ([URI] = @Original_URI) AND ((@IsNull_ResourceURI = 1 AND [ResourceURI] IS " +
                "NULL) OR ([ResourceURI] = @Original_ResourceURI)) AND ((@IsNull_ImageType = 1 AN" +
                "D [ImageType] IS NULL) OR ([ImageType] = @Original_ImageType)) AND ((@IsNull_Dat" +
                "aWithholdingReason = 1 AND [DataWithholdingReason] IS NULL) OR ([DataWithholding" +
                "Reason] = @Original_DataWithholdingReason)) AND ((@IsNull_Title = 1 AND [Title] " +
                "IS NULL) OR ([Title] = @Original_Title)) AND ((@IsNull_IPR = 1 AND [IPR] IS NULL" +
                ") OR ([IPR] = @Original_IPR)) AND ((@IsNull_CreatorAgent = 1 AND [CreatorAgent] " +
                "IS NULL) OR ([CreatorAgent] = @Original_CreatorAgent)) AND ((@IsNull_CreatorAgen" +
                "tURI = 1 AND [CreatorAgentURI] IS NULL) OR ([CreatorAgentURI] = @Original_Creato" +
                "rAgentURI)) AND ((@IsNull_CopyrightStatement = 1 AND [CopyrightStatement] IS NUL" +
                "L) OR ([CopyrightStatement] = @Original_CopyrightStatement)) AND ((@IsNull_Licen" +
                "seType = 1 AND [LicenseType] IS NULL) OR ([LicenseType] = @Original_LicenseType)" +
                ") AND ((@IsNull_InternalNotes = 1 AND [InternalNotes] IS NULL) OR ([InternalNote" +
                "s] = @Original_InternalNotes)) AND ((@IsNull_LicenseHolder = 1 AND [LicenseHolde" +
                "r] IS NULL) OR ([LicenseHolder] = @Original_LicenseHolder)) AND ((@IsNull_Licens" +
                "eHolderAgentURI = 1 AND [LicenseHolderAgentURI] IS NULL) OR ([LicenseHolderAgent" +
                "URI] = @Original_LicenseHolderAgentURI)) AND ((@IsNull_LicenseYear = 1 AND [Lice" +
                "nseYear] IS NULL) OR ([LicenseYear] = @Original_LicenseYear)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Microsoft.Data.SqlClient.SqlParameter param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SeriesID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_URI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "URI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ResourceURI";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ResourceURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ResourceURI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ResourceURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ImageType";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ImageType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ImageType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ImageType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DataWithholdingReason";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DataWithholdingReason";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DataWithholdingReason";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DataWithholdingReason";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_Title";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_Title";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_IPR";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IPR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_IPR";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "IPR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CreatorAgent";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgent";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CreatorAgent";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgent";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CreatorAgentURI";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgentURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CreatorAgentURI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgentURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CopyrightStatement";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CopyrightStatement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CopyrightStatement";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CopyrightStatement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_LicenseType";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "LicenseType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_LicenseType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InternalNotes";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InternalNotes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InternalNotes";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InternalNotes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_LicenseHolder";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolder";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_LicenseHolder";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolder";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_LicenseHolderAgentURI";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolderAgentURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_LicenseHolderAgentURI";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolderAgentURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_LicenseYear";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "LicenseYear";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_LicenseYear";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseYear";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [CollectionEventSeriesImage] ([SeriesID], [URI], [ResourceURI], [ImageType], [Notes], [DataWithholdingReason], [Description], [Title], [IPR], [CreatorAgent], [CreatorAgentURI], [CopyrightStatement], [LicenseType], [InternalNotes], [LicenseHolder], [LicenseHolderAgentURI], [LicenseYear]) VALUES (@SeriesID, @URI, @ResourceURI, @ImageType, @Notes, @DataWithholdingReason, @Description, @Title, @IPR, @CreatorAgent, @CreatorAgentURI, @CopyrightStatement, @LicenseType, @InternalNotes, @LicenseHolder, @LicenseHolderAgentURI, @LicenseYear);
SELECT SeriesID, URI, ResourceURI, ImageType, Notes, DataWithholdingReason, Description, Title, IPR, CreatorAgent, CreatorAgentURI, CopyrightStatement, LicenseType, InternalNotes, LicenseHolder, LicenseHolderAgentURI, LicenseYear FROM CollectionEventSeriesImage WHERE (SeriesID = @SeriesID) AND (URI = @URI)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@SeriesID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@URI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "URI";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ResourceURI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ResourceURI";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ImageType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ImageType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Notes";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Notes";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DataWithholdingReason";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DataWithholdingReason";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Description";
            param.DbType = global::System.Data.DbType.Xml;
            param.SqlDbType = global::System.Data.SqlDbType.Xml;
            param.IsNullable = true;
            param.SourceColumn = "Description";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Title";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Title";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IPR";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "IPR";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CreatorAgent";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgent";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CreatorAgentURI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgentURI";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CopyrightStatement";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CopyrightStatement";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@LicenseType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseType";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InternalNotes";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InternalNotes";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@LicenseHolder";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolder";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@LicenseHolderAgentURI";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolderAgentURI";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@LicenseYear";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseYear";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [CollectionEventSeriesImage] SET [SeriesID] = @SeriesID, [URI] = @URI, [Re" +
                "sourceURI] = @ResourceURI, [ImageType] = @ImageType, [Notes] = @Notes, [DataWith" +
                "holdingReason] = @DataWithholdingReason, [Description] = @Description, [Title] =" +
                " @Title, [IPR] = @IPR, [CreatorAgent] = @CreatorAgent, [CreatorAgentURI] = @Crea" +
                "torAgentURI, [CopyrightStatement] = @CopyrightStatement, [LicenseType] = @Licens" +
                "eType, [InternalNotes] = @InternalNotes, [LicenseHolder] = @LicenseHolder, [Lice" +
                "nseHolderAgentURI] = @LicenseHolderAgentURI, [LicenseYear] = @LicenseYear WHERE " +
                "(([SeriesID] = @Original_SeriesID) AND ([URI] = @Original_URI) AND ((@IsNull_Res" +
                "ourceURI = 1 AND [ResourceURI] IS NULL) OR ([ResourceURI] = @Original_ResourceUR" +
                "I)) AND ((@IsNull_ImageType = 1 AND [ImageType] IS NULL) OR ([ImageType] = @Orig" +
                "inal_ImageType)) AND ((@IsNull_DataWithholdingReason = 1 AND [DataWithholdingRea" +
                "son] IS NULL) OR ([DataWithholdingReason] = @Original_DataWithholdingReason)) AN" +
                "D ((@IsNull_Title = 1 AND [Title] IS NULL) OR ([Title] = @Original_Title)) AND (" +
                "(@IsNull_IPR = 1 AND [IPR] IS NULL) OR ([IPR] = @Original_IPR)) AND ((@IsNull_Cr" +
                "eatorAgent = 1 AND [CreatorAgent] IS NULL) OR ([CreatorAgent] = @Original_Creato" +
                "rAgent)) AND ((@IsNull_CreatorAgentURI = 1 AND [CreatorAgentURI] IS NULL) OR ([C" +
                "reatorAgentURI] = @Original_CreatorAgentURI)) AND ((@IsNull_CopyrightStatement =" +
                " 1 AND [CopyrightStatement] IS NULL) OR ([CopyrightStatement] = @Original_Copyri" +
                "ghtStatement)) AND ((@IsNull_LicenseType = 1 AND [LicenseType] IS NULL) OR ([Lic" +
                "enseType] = @Original_LicenseType)) AND ((@IsNull_InternalNotes = 1 AND [Interna" +
                "lNotes] IS NULL) OR ([InternalNotes] = @Original_InternalNotes)) AND ((@IsNull_L" +
                "icenseHolder = 1 AND [LicenseHolder] IS NULL) OR ([LicenseHolder] = @Original_Li" +
                "censeHolder)) AND ((@IsNull_LicenseHolderAgentURI = 1 AND [LicenseHolderAgentURI" +
                "] IS NULL) OR ([LicenseHolderAgentURI] = @Original_LicenseHolderAgentURI)) AND (" +
                "(@IsNull_LicenseYear = 1 AND [LicenseYear] IS NULL) OR ([LicenseYear] = @Origina" +
                "l_LicenseYear)));\r\nSELECT SeriesID, URI, ResourceURI, ImageType, Notes, DataWith" +
                "holdingReason, Description, Title, IPR, CreatorAgent, CreatorAgentURI, Copyright" +
                "Statement, LicenseType, InternalNotes, LicenseHolder, LicenseHolderAgentURI, Lic" +
                "enseYear FROM CollectionEventSeriesImage WHERE (SeriesID = @SeriesID) AND (URI =" +
                " @URI)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@SeriesID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@URI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "URI";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ResourceURI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ResourceURI";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@ImageType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ImageType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Notes";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Notes";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DataWithholdingReason";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DataWithholdingReason";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Description";
            param.DbType = global::System.Data.DbType.Xml;
            param.SqlDbType = global::System.Data.SqlDbType.Xml;
            param.IsNullable = true;
            param.SourceColumn = "Description";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Title";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Title";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IPR";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "IPR";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CreatorAgent";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgent";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CreatorAgentURI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgentURI";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@CopyrightStatement";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CopyrightStatement";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@LicenseType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@InternalNotes";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InternalNotes";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@LicenseHolder";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolder";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@LicenseHolderAgentURI";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolderAgentURI";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@LicenseYear";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseYear";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SeriesID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_URI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "URI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ResourceURI";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ResourceURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ResourceURI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "ResourceURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_ImageType";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "ImageType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_ImageType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "ImageType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DataWithholdingReason";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DataWithholdingReason";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DataWithholdingReason";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DataWithholdingReason";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_Title";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "Title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_Title";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Title";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_IPR";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "IPR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_IPR";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "IPR";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CreatorAgent";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgent";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CreatorAgent";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgent";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CreatorAgentURI";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgentURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CreatorAgentURI";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "CreatorAgentURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_CopyrightStatement";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "CopyrightStatement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_CopyrightStatement";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "CopyrightStatement";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_LicenseType";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "LicenseType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_LicenseType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_InternalNotes";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "InternalNotes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_InternalNotes";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "InternalNotes";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_LicenseHolder";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolder";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_LicenseHolder";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolder";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_LicenseHolderAgentURI";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolderAgentURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_LicenseHolderAgentURI";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseHolderAgentURI";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_LicenseYear";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "LicenseYear";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_LicenseYear";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "LicenseYear";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Microsoft.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DiversityCollection.Properties.Settings.Default.DiversityCollection_TestConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Microsoft.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        SeriesID, URI, ResourceURI, ImageType, Notes, DataWithholdingReason, Description, Title, IPR, CreatorAgent, CreatorAgentURI, CopyrightStatement, LicenseType, 
                         InternalNotes, LicenseHolder, LicenseHolderAgentURI, LicenseYear
FROM            CollectionEventSeriesImage";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetCollectionEventSeries.CollectionEventSeriesImageDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetCollectionEventSeries.CollectionEventSeriesImageDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetCollectionEventSeries.CollectionEventSeriesImageDataTable dataTable = new DataSetCollectionEventSeries.CollectionEventSeriesImageDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetCollectionEventSeries.CollectionEventSeriesImageDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetCollectionEventSeries dataSet) {
            return this.Adapter.Update(dataSet, "CollectionEventSeriesImage");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_SeriesID, string Original_URI, string Original_ResourceURI, string Original_ImageType, string Original_DataWithholdingReason, string Original_Title, string Original_IPR, string Original_CreatorAgent, string Original_CreatorAgentURI, string Original_CopyrightStatement, string Original_LicenseType, string Original_InternalNotes, string Original_LicenseHolder, string Original_LicenseHolderAgentURI, string Original_LicenseYear) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SeriesID));
            if ((Original_URI == null)) {
                throw new global::System.ArgumentNullException("Original_URI");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_URI));
            }
            if ((Original_ResourceURI == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_ResourceURI));
            }
            if ((Original_ImageType == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_ImageType));
            }
            if ((Original_DataWithholdingReason == null)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((string)(Original_DataWithholdingReason));
            }
            if ((Original_Title == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Title));
            }
            if ((Original_IPR == null)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((string)(Original_IPR));
            }
            if ((Original_CreatorAgent == null)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((string)(Original_CreatorAgent));
            }
            if ((Original_CreatorAgentURI == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_CreatorAgentURI));
            }
            if ((Original_CopyrightStatement == null)) {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[17].Value = ((string)(Original_CopyrightStatement));
            }
            if ((Original_LicenseType == null)) {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[19].Value = ((string)(Original_LicenseType));
            }
            if ((Original_InternalNotes == null)) {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[21].Value = ((string)(Original_InternalNotes));
            }
            if ((Original_LicenseHolder == null)) {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[23].Value = ((string)(Original_LicenseHolder));
            }
            if ((Original_LicenseHolderAgentURI == null)) {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[25].Value = ((string)(Original_LicenseHolderAgentURI));
            }
            if ((Original_LicenseYear == null)) {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[27].Value = ((string)(Original_LicenseYear));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(
                    int SeriesID, 
                    string URI, 
                    string ResourceURI, 
                    string ImageType, 
                    string Notes, 
                    string DataWithholdingReason, 
                    object Description, 
                    string Title, 
                    string IPR, 
                    string CreatorAgent, 
                    string CreatorAgentURI, 
                    string CopyrightStatement, 
                    string LicenseType, 
                    string InternalNotes, 
                    string LicenseHolder, 
                    string LicenseHolderAgentURI, 
                    string LicenseYear) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SeriesID));
            if ((URI == null)) {
                throw new global::System.ArgumentNullException("URI");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(URI));
            }
            if ((ResourceURI == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ResourceURI));
            }
            if ((ImageType == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ImageType));
            }
            if ((Notes == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Notes));
            }
            if ((DataWithholdingReason == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(DataWithholdingReason));
            }
            if ((Description == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((object)(Description));
            }
            if ((Title == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Title));
            }
            if ((IPR == null)) {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = ((string)(IPR));
            }
            if ((CreatorAgent == null)) {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = ((string)(CreatorAgent));
            }
            if ((CreatorAgentURI == null)) {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = ((string)(CreatorAgentURI));
            }
            if ((CopyrightStatement == null)) {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = ((string)(CopyrightStatement));
            }
            if ((LicenseType == null)) {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = ((string)(LicenseType));
            }
            if ((InternalNotes == null)) {
                this.Adapter.InsertCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[13].Value = ((string)(InternalNotes));
            }
            if ((LicenseHolder == null)) {
                this.Adapter.InsertCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[14].Value = ((string)(LicenseHolder));
            }
            if ((LicenseHolderAgentURI == null)) {
                this.Adapter.InsertCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[15].Value = ((string)(LicenseHolderAgentURI));
            }
            if ((LicenseYear == null)) {
                this.Adapter.InsertCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[16].Value = ((string)(LicenseYear));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    int SeriesID, 
                    string URI, 
                    string ResourceURI, 
                    string ImageType, 
                    string Notes, 
                    string DataWithholdingReason, 
                    object Description, 
                    string Title, 
                    string IPR, 
                    string CreatorAgent, 
                    string CreatorAgentURI, 
                    string CopyrightStatement, 
                    string LicenseType, 
                    string InternalNotes, 
                    string LicenseHolder, 
                    string LicenseHolderAgentURI, 
                    string LicenseYear, 
                    int Original_SeriesID, 
                    string Original_URI, 
                    string Original_ResourceURI, 
                    string Original_ImageType, 
                    string Original_DataWithholdingReason, 
                    string Original_Title, 
                    string Original_IPR, 
                    string Original_CreatorAgent, 
                    string Original_CreatorAgentURI, 
                    string Original_CopyrightStatement, 
                    string Original_LicenseType, 
                    string Original_InternalNotes, 
                    string Original_LicenseHolder, 
                    string Original_LicenseHolderAgentURI, 
                    string Original_LicenseYear) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SeriesID));
            if ((URI == null)) {
                throw new global::System.ArgumentNullException("URI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(URI));
            }
            if ((ResourceURI == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ResourceURI));
            }
            if ((ImageType == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ImageType));
            }
            if ((Notes == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Notes));
            }
            if ((DataWithholdingReason == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(DataWithholdingReason));
            }
            if ((Description == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(Description));
            }
            if ((Title == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Title));
            }
            if ((IPR == null)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(IPR));
            }
            if ((CreatorAgent == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(CreatorAgent));
            }
            if ((CreatorAgentURI == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(CreatorAgentURI));
            }
            if ((CopyrightStatement == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(CopyrightStatement));
            }
            if ((LicenseType == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(LicenseType));
            }
            if ((InternalNotes == null)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(InternalNotes));
            }
            if ((LicenseHolder == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((string)(LicenseHolder));
            }
            if ((LicenseHolderAgentURI == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(LicenseHolderAgentURI));
            }
            if ((LicenseYear == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(LicenseYear));
            }
            this.Adapter.UpdateCommand.Parameters[17].Value = ((int)(Original_SeriesID));
            if ((Original_URI == null)) {
                throw new global::System.ArgumentNullException("Original_URI");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((string)(Original_URI));
            }
            if ((Original_ResourceURI == null)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((string)(Original_ResourceURI));
            }
            if ((Original_ImageType == null)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((string)(Original_ImageType));
            }
            if ((Original_DataWithholdingReason == null)) {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[24].Value = ((string)(Original_DataWithholdingReason));
            }
            if ((Original_Title == null)) {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[25].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[26].Value = ((string)(Original_Title));
            }
            if ((Original_IPR == null)) {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[27].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[28].Value = ((string)(Original_IPR));
            }
            if ((Original_CreatorAgent == null)) {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[29].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[30].Value = ((string)(Original_CreatorAgent));
            }
            if ((Original_CreatorAgentURI == null)) {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[31].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[32].Value = ((string)(Original_CreatorAgentURI));
            }
            if ((Original_CopyrightStatement == null)) {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[34].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[33].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[34].Value = ((string)(Original_CopyrightStatement));
            }
            if ((Original_LicenseType == null)) {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[36].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[35].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[36].Value = ((string)(Original_LicenseType));
            }
            if ((Original_InternalNotes == null)) {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[38].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[37].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[38].Value = ((string)(Original_InternalNotes));
            }
            if ((Original_LicenseHolder == null)) {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[40].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[39].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[40].Value = ((string)(Original_LicenseHolder));
            }
            if ((Original_LicenseHolderAgentURI == null)) {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[42].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[41].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[42].Value = ((string)(Original_LicenseHolderAgentURI));
            }
            if ((Original_LicenseYear == null)) {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[44].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[43].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[44].Value = ((string)(Original_LicenseYear));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ResourceURI, 
                    string ImageType, 
                    string Notes, 
                    string DataWithholdingReason, 
                    object Description, 
                    string Title, 
                    string IPR, 
                    string CreatorAgent, 
                    string CreatorAgentURI, 
                    string CopyrightStatement, 
                    string LicenseType, 
                    string InternalNotes, 
                    string LicenseHolder, 
                    string LicenseHolderAgentURI, 
                    string LicenseYear, 
                    int Original_SeriesID, 
                    string Original_URI, 
                    string Original_ResourceURI, 
                    string Original_ImageType, 
                    string Original_DataWithholdingReason, 
                    string Original_Title, 
                    string Original_IPR, 
                    string Original_CreatorAgent, 
                    string Original_CreatorAgentURI, 
                    string Original_CopyrightStatement, 
                    string Original_LicenseType, 
                    string Original_InternalNotes, 
                    string Original_LicenseHolder, 
                    string Original_LicenseHolderAgentURI, 
                    string Original_LicenseYear) {
            return this.Update(Original_SeriesID, Original_URI, ResourceURI, ImageType, Notes, DataWithholdingReason, Description, Title, IPR, CreatorAgent, CreatorAgentURI, CopyrightStatement, LicenseType, InternalNotes, LicenseHolder, LicenseHolderAgentURI, LicenseYear, Original_SeriesID, Original_URI, Original_ResourceURI, Original_ImageType, Original_DataWithholdingReason, Original_Title, Original_IPR, Original_CreatorAgent, Original_CreatorAgentURI, Original_CopyrightStatement, Original_LicenseType, Original_InternalNotes, Original_LicenseHolder, Original_LicenseHolderAgentURI, Original_LicenseYear);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CollectionEventSeriesDescriptorTableAdapter : global::System.ComponentModel.Component {
        
        private global::Microsoft.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::Microsoft.Data.SqlClient.SqlConnection _connection;
        
        private global::Microsoft.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public CollectionEventSeriesDescriptorTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::Microsoft.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Microsoft.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Microsoft.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Microsoft.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Microsoft.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CollectionEventSeriesDescriptor";
            tableMapping.ColumnMappings.Add("SeriesID", "SeriesID");
            tableMapping.ColumnMappings.Add("DescriptorID", "DescriptorID");
            tableMapping.ColumnMappings.Add("Descriptor", "Descriptor");
            tableMapping.ColumnMappings.Add("URL", "URL");
            tableMapping.ColumnMappings.Add("DescriptorType", "DescriptorType");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [CollectionEventSeriesDescriptor] WHERE (([SeriesID] = @Original_SeriesID) AND ([DescriptorID] = @Original_DescriptorID) AND ([Descriptor] = @Original_Descriptor) AND ((@IsNull_URL = 1 AND [URL] IS NULL) OR ([URL] = @Original_URL)) AND ((@IsNull_DescriptorType = 1 AND [DescriptorType] IS NULL) OR ([DescriptorType] = @Original_DescriptorType)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Microsoft.Data.SqlClient.SqlParameter param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SeriesID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DescriptorID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DescriptorID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_Descriptor";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Descriptor";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_URL";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "URL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_URL";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "URL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DescriptorType";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DescriptorType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DescriptorType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DescriptorType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [CollectionEventSeriesDescriptor] ([SeriesID], [Descriptor], [URL], [DescriptorType]) VALUES (@SeriesID, @Descriptor, @URL, @DescriptorType);
SELECT SeriesID, DescriptorID, Descriptor, URL, DescriptorType FROM CollectionEventSeriesDescriptor WHERE (DescriptorID = SCOPE_IDENTITY()) AND (SeriesID = @SeriesID)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@SeriesID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesID";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Descriptor";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Descriptor";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@URL";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "URL";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DescriptorType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DescriptorType";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [CollectionEventSeriesDescriptor] SET [SeriesID] = @SeriesID, [Descriptor] = @Descriptor, [URL] = @URL, [DescriptorType] = @DescriptorType WHERE (([SeriesID] = @Original_SeriesID) AND ([DescriptorID] = @Original_DescriptorID) AND ([Descriptor] = @Original_Descriptor) AND ((@IsNull_URL = 1 AND [URL] IS NULL) OR ([URL] = @Original_URL)) AND ((@IsNull_DescriptorType = 1 AND [DescriptorType] IS NULL) OR ([DescriptorType] = @Original_DescriptorType)));
SELECT SeriesID, DescriptorID, Descriptor, URL, DescriptorType FROM CollectionEventSeriesDescriptor WHERE (DescriptorID = @DescriptorID) AND (SeriesID = @SeriesID)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@SeriesID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesID";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Descriptor";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Descriptor";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@URL";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "URL";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DescriptorType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DescriptorType";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_SeriesID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "SeriesID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DescriptorID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DescriptorID";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_Descriptor";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "Descriptor";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_URL";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "URL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_URL";
            param.DbType = global::System.Data.DbType.AnsiString;
            param.SqlDbType = global::System.Data.SqlDbType.VarChar;
            param.IsNullable = true;
            param.SourceColumn = "URL";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@IsNull_DescriptorType";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.IsNullable = true;
            param.SourceColumn = "DescriptorType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@Original_DescriptorType";
            param.SqlDbType = global::System.Data.SqlDbType.NVarChar;
            param.IsNullable = true;
            param.SourceColumn = "DescriptorType";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Microsoft.Data.SqlClient.SqlParameter();
            param.ParameterName = "@DescriptorID";
            param.DbType = global::System.Data.DbType.Int32;
            param.SqlDbType = global::System.Data.SqlDbType.Int;
            param.Size = 4;
            param.IsNullable = true;
            param.SourceColumn = "DescriptorID";
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Microsoft.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::DiversityCollection.Properties.Settings.Default.DiversityCollection_TestConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Microsoft.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::Microsoft.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        SeriesID, DescriptorID, Descriptor, URL, DescriptorType\r\nFROM      " +
                "      CollectionEventSeriesDescriptor";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetCollectionEventSeries.CollectionEventSeriesDescriptorDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetCollectionEventSeries.CollectionEventSeriesDescriptorDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSetCollectionEventSeries.CollectionEventSeriesDescriptorDataTable dataTable = new DataSetCollectionEventSeries.CollectionEventSeriesDescriptorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetCollectionEventSeries.CollectionEventSeriesDescriptorDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSetCollectionEventSeries dataSet) {
            return this.Adapter.Update(dataSet, "CollectionEventSeriesDescriptor");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_SeriesID, int Original_DescriptorID, string Original_Descriptor, string Original_URL, string Original_DescriptorType) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_SeriesID));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_DescriptorID));
            if ((Original_Descriptor == null)) {
                throw new global::System.ArgumentNullException("Original_Descriptor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Descriptor));
            }
            if ((Original_URL == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_URL));
            }
            if ((Original_DescriptorType == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_DescriptorType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int SeriesID, string Descriptor, string URL, string DescriptorType) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(SeriesID));
            if ((Descriptor == null)) {
                throw new global::System.ArgumentNullException("Descriptor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Descriptor));
            }
            if ((URL == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(URL));
            }
            if ((DescriptorType == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(DescriptorType));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int SeriesID, string Descriptor, string URL, string DescriptorType, int Original_SeriesID, int Original_DescriptorID, string Original_Descriptor, string Original_URL, string Original_DescriptorType, int DescriptorID) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(SeriesID));
            if ((Descriptor == null)) {
                throw new global::System.ArgumentNullException("Descriptor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Descriptor));
            }
            if ((URL == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(URL));
            }
            if ((DescriptorType == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(DescriptorType));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_SeriesID));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_DescriptorID));
            if ((Original_Descriptor == null)) {
                throw new global::System.ArgumentNullException("Original_Descriptor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Descriptor));
            }
            if ((Original_URL == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_URL));
            }
            if ((Original_DescriptorType == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_DescriptorType));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(DescriptorID));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descriptor, string URL, string DescriptorType, int Original_SeriesID, int Original_DescriptorID, string Original_Descriptor, string Original_URL, string Original_DescriptorType) {
            return this.Update(Original_SeriesID, Descriptor, URL, DescriptorType, Original_SeriesID, Original_DescriptorID, Original_Descriptor, Original_URL, Original_DescriptorType, Original_DescriptorID);
        }
    }
}

#pragma warning restore 1591