//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WpfSamplingPlotPage.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WpfSamplingPlotPage.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        public static byte[] _1g_32 {
            get {
                object obj = ResourceManager.GetObject("_1g_32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        public static byte[] _1r_32 {
            get {
                object obj = ResourceManager.GetObject("_1r_32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        public static byte[] _2g_32 {
            get {
                object obj = ResourceManager.GetObject("_2g_32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        public static byte[] _2r_32 {
            get {
                object obj = ResourceManager.GetObject("_2r_32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        public static byte[] _3dsmove {
            get {
                object obj = ResourceManager.GetObject("_3dsmove", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        public static byte[] _3g_32 {
            get {
                object obj = ResourceManager.GetObject("_3g_32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        public static byte[] _3r_32 {
            get {
                object obj = ResourceManager.GetObject("_3r_32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All ähnelt.
        /// </summary>
        public static string AssignButtonAssignAll {
            get {
                return ResourceManager.GetString("AssignButtonAssignAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Last ähnelt.
        /// </summary>
        public static string AssignButtonAssignLast {
            get {
                return ResourceManager.GetString("AssignButtonAssignLast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die None ähnelt.
        /// </summary>
        public static string AssignButtonRemoveAll {
            get {
                return ResourceManager.GetString("AssignButtonRemoveAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MTB/Q center point only ähnelt.
        /// </summary>
        public static string AssignCheckBoxCenterPoint {
            get {
                return ResourceManager.GetString("AssignCheckBoxCenterPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save as one object ähnelt.
        /// </summary>
        public static string AssignCheckBoxSingleObject {
            get {
                return ResourceManager.GetString("AssignCheckBoxSingleObject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign parameter to sample: ähnelt.
        /// </summary>
        public static string AssignLabelAssignParameter {
            get {
                return ResourceManager.GetString("AssignLabelAssignParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Currently assigned fields: ähnelt.
        /// </summary>
        public static string AssignLabelCurrentlyAssigned {
            get {
                return ResourceManager.GetString("AssignLabelCurrentlyAssigned", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select input parameter for assignment: ähnelt.
        /// </summary>
        public static string AssignLabelSelectInput {
            get {
                return ResourceManager.GetString("AssignLabelSelectInput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign Sample Parameters ähnelt.
        /// </summary>
        public static string AssignWindowTitle {
            get {
                return ResourceManager.GetString("AssignWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Assign selected attributes to ID or Text: ähnelt.
        /// </summary>
        public static string AttributesLabelTextID {
            get {
                return ResourceManager.GetString("AttributesLabelTextID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add ähnelt.
        /// </summary>
        public static string ctrlAdd {
            get {
                return ResourceManager.GetString("ctrlAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Area ähnelt.
        /// </summary>
        public static string ctrlAreaMode {
            get {
                return ResourceManager.GetString("ctrlAreaMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string ctrlButtonCancel {
            get {
                return ResourceManager.GetString("ctrlButtonCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string ctrlButtonOK {
            get {
                return ResourceManager.GetString("ctrlButtonOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Color ähnelt.
        /// </summary>
        public static string ctrlColor {
            get {
                return ResourceManager.GetString("ctrlColor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fill ähnelt.
        /// </summary>
        public static string ctrlFill {
            get {
                return ResourceManager.GetString("ctrlFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ID: ähnelt.
        /// </summary>
        public static string ctrlIdentifier {
            get {
                return ResourceManager.GetString("ctrlIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Line ähnelt.
        /// </summary>
        public static string ctrlLineMode {
            get {
                return ResourceManager.GetString("ctrlLineMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load ähnelt.
        /// </summary>
        public static string ctrlLoad {
            get {
                return ResourceManager.GetString("ctrlLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die next &gt; ähnelt.
        /// </summary>
        public static string ctrlNext {
            get {
                return ResourceManager.GetString("ctrlNext", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Point ähnelt.
        /// </summary>
        public static string ctrlPointMode {
            get {
                return ResourceManager.GetString("ctrlPointMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Print ähnelt.
        /// </summary>
        public static string ctrlPrint {
            get {
                return ResourceManager.GetString("ctrlPrint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save ähnelt.
        /// </summary>
        public static string ctrlSave {
            get {
                return ResourceManager.GetString("ctrlSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stroke ähnelt.
        /// </summary>
        public static string ctrlStroke {
            get {
                return ResourceManager.GetString("ctrlStroke", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create separate samples ähnelt.
        /// </summary>
        public static string DetectionCheckBoxSeparateSamples {
            get {
                return ResourceManager.GetString("DetectionCheckBoxSeparateSamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust minimum and maximum color values: ähnelt.
        /// </summary>
        public static string DetectionLabelAdjust {
            get {
                return ResourceManager.GetString("DetectionLabelAdjust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blue ähnelt.
        /// </summary>
        public static string DetectionLabelBlue {
            get {
                return ResourceManager.GetString("DetectionLabelBlue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Green ähnelt.
        /// </summary>
        public static string DetectionLabelGreen {
            get {
                return ResourceManager.GetString("DetectionLabelGreen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grey ähnelt.
        /// </summary>
        public static string DetectionLabelGrey {
            get {
                return ResourceManager.GetString("DetectionLabelGrey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Identifier text: ähnelt.
        /// </summary>
        public static string DetectionLabelId {
            get {
                return ResourceManager.GetString("DetectionLabelId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Minimum point distance: ähnelt.
        /// </summary>
        public static string DetectionLabelMinDistance {
            get {
                return ResourceManager.GetString("DetectionLabelMinDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enumeration: ähnelt.
        /// </summary>
        public static string DetectionLabelNumber {
            get {
                return ResourceManager.GetString("DetectionLabelNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Red ähnelt.
        /// </summary>
        public static string DetectionLabelRed {
            get {
                return ResourceManager.GetString("DetectionLabelRed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING!\r\nCould not connect to geonames server to get the altitude coordinates! ähnelt.
        /// </summary>
        public static string ErrAltitude {
            get {
                return ResourceManager.GetString("ErrAltitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Diversity GIS Editor ähnelt.
        /// </summary>
        public static string ErrCaption {
            get {
                return ResourceManager.GetString("ErrCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING!\r\nLoaded image coordinates are outside the reference map area.\r\nThe image might not be visible. ähnelt.
        /// </summary>
        public static string ErrCoordsNotVisible {
            get {
                return ResourceManager.GetString("ErrCoordsNotVisible", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING!\r\nThe map is not aligned to north direction!\r\nA north aligned background plane will be created to host the loaded map. ähnelt.
        /// </summary>
        public static string ErrCreatingReferenceMap {
            get {
                return ResourceManager.GetString("ErrCreatingReferenceMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING!\r\nThis will delete all samples of the sample list, except the reference map!\r\nDo you want to continue? ähnelt.
        /// </summary>
        public static string ErrDeleteAllSamples {
            get {
                return ResourceManager.GetString("ErrDeleteAllSamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 1 (header line) ähnelt.
        /// </summary>
        public static string ErrHeaderLine {
            get {
                return ResourceManager.GetString("ErrHeaderLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ERROR:\r\nInvalid file type:\r\n{0} ähnelt.
        /// </summary>
        public static string ErrInvalidFilename {
            get {
                return ResourceManager.GetString("ErrInvalidFilename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid data detected in the following lines: ähnelt.
        /// </summary>
        public static string ErrInvalidLines {
            get {
                return ResourceManager.GetString("ErrInvalidLines", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING:\r\nInconsistant map, exceeds 2 hemispheres!\r\nThe Geometry objects can not be positioned at the correct place! ähnelt.
        /// </summary>
        public static string ErrInvalidWorld {
            get {
                return ResourceManager.GetString("ErrInvalidWorld", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING:\r\nThe latitude of the map edge is beyond {0}° (north or south)!\r\nGeometry objects in this region may not be positioned at the correct place. ähnelt.
        /// </summary>
        public static string ErrLatitude {
            get {
                return ResourceManager.GetString("ErrLatitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING:\r\nThe longitude range of the image coordinates is not consistent (180° line)!\r\nGeometry objects can not be positioned at the correct place! ähnelt.
        /// </summary>
        public static string ErrLongitude {
            get {
                return ResourceManager.GetString("ErrLongitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ERROR:\r\nNo reference map with world coordinates available! ähnelt.
        /// </summary>
        public static string ErrMissingReferenceMap {
            get {
                return ResourceManager.GetString("ErrMissingReferenceMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ERROR:\r\nCurrently there is no map loaded to be adapted! ähnelt.
        /// </summary>
        public static string ErrNoAdaptImageLoaded {
            get {
                return ResourceManager.GetString("ErrNoAdaptImageLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING:\r\nYou must select at least one of the check boxes for Stroke or Fill to change the color! ähnelt.
        /// </summary>
        public static string ErrNoCheckBoxSelectedCol {
            get {
                return ResourceManager.GetString("ErrNoCheckBoxSelectedCol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ERROR:\r\nYou must select at least one of the check boxes for Stroke or Fill to change the transparency! ähnelt.
        /// </summary>
        public static string ErrNoCheckBoxSelectedTrans {
            get {
                return ResourceManager.GetString("ErrNoCheckBoxSelectedTrans", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING:\r\nYou must select Fill check box to change the transparency of an image. ähnelt.
        /// </summary>
        public static string ErrNoFillCheckBoxSelected {
            get {
                return ResourceManager.GetString("ErrNoFillCheckBoxSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ERROR regarding help file DiversityGisEditor.chm:\r\n ähnelt.
        /// </summary>
        public static string ErrNoHelpFile {
            get {
                return ResourceManager.GetString("ErrNoHelpFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING:\r\nThe ArcGIS attributes of the dBase file cannot be read. Load shapes anyway?\r\n ähnelt.
        /// </summary>
        public static string ErrNoOleDBAdapterForRead {
            get {
                return ResourceManager.GetString("ErrNoOleDBAdapterForRead", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING:\r\nThe ArcGIS dBase file will be created, but not filled up.\r\n ähnelt.
        /// </summary>
        public static string ErrNoOleDBAdapterInstalled {
            get {
                return ResourceManager.GetString("ErrNoOleDBAdapterInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ERROR:\r\nNo reference map available, cannot save working area. ähnelt.
        /// </summary>
        public static string ErrNoReferenceMap {
            get {
                return ResourceManager.GetString("ErrNoReferenceMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING!\r\nThe map cannot be used as a reference map,\r\nbecause it is not aligned to north direction!\r\nPlease create a Google map first and load the map again. ähnelt.
        /// </summary>
        public static string ErrNotSuitableAsReferenceMap {
            get {
                return ResourceManager.GetString("ErrNotSuitableAsReferenceMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ERROR:\r\nWorld coordinates could not be retrieved.\r\nPlease move the map and add it again! ähnelt.
        /// </summary>
        public static string ErrNoWorldCoords {
            get {
                return ResourceManager.GetString("ErrNoWorldCoords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING!\r\nChanging the drawing mode will delete your current sample!\r\nDo you wish to add it to the sample list? ähnelt.
        /// </summary>
        public static string ErrSaveSample {
            get {
                return ResourceManager.GetString("ErrSaveSample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die WARNING!\r\nThe shapes consist of {0} points.Saving them will take very long. Save anyway? ähnelt.
        /// </summary>
        public static string ErrTooManyPoints {
            get {
                return ResourceManager.GetString("ErrTooManyPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        public static byte[] fin_32 {
            get {
                object obj = ResourceManager.GetObject("fin_32", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Authors: ähnelt.
        /// </summary>
        public static string InfoLabelAuthors {
            get {
                return ResourceManager.GetString("InfoLabelAuthors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Wolfgang Reichert ähnelt.
        /// </summary>
        public static string InfoLabelAuthorsData {
            get {
                return ResourceManager.GetString("InfoLabelAuthorsData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copyright: ähnelt.
        /// </summary>
        public static string InfoLabelCopyright {
            get {
                return ResourceManager.GetString("InfoLabelCopyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die © 2010 - {0}, Diversity GIS Editor ähnelt.
        /// </summary>
        public static string InfoLabelCopyrightData {
            get {
                return ResourceManager.GetString("InfoLabelCopyrightData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die A tool to create, visualize, edit and archive samples 
        ///within a geographical map environment. ähnelt.
        /// </summary>
        public static string InfoLabelDescription {
            get {
                return ResourceManager.GetString("InfoLabelDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Disclaimer: ähnelt.
        /// </summary>
        public static string InfoLabelDisclaimer {
            get {
                return ResourceManager.GetString("InfoLabelDisclaimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This program is distributed in the hope that it will be 
        ///useful, but WITHOUT ANY WARRANTY; without even 
        ///the implied warranty of MERCHANTABILITY or FITNESS 
        ///FOR A PARTICULAR PURPOSE. For more details see:
        /// ähnelt.
        /// </summary>
        public static string InfoLabelDisclaimerData {
            get {
                return ResourceManager.GetString("InfoLabelDisclaimerData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Institution: ähnelt.
        /// </summary>
        public static string InfoLabelInstitution {
            get {
                return ResourceManager.GetString("InfoLabelInstitution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The IT Center of the Staatliche Naturwissenschaftliche 
        ///Sammlungen Bayerns
        ///
        /// ähnelt.
        /// </summary>
        public static string InfoLabelInstitutionData {
            get {
                return ResourceManager.GetString("InfoLabelInstitutionData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die License: ähnelt.
        /// </summary>
        public static string InfoLabelLicense {
            get {
                return ResourceManager.GetString("InfoLabelLicense", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die This program is free software; you can redistribute it 
        ///and/or modify it under the terms of the GNU General 
        ///Public License as published by the Free Software 
        ///Foundation; either version 2 of the License or later. ähnelt.
        /// </summary>
        public static string InfoLabelLicenseData {
            get {
                return ResourceManager.GetString("InfoLabelLicenseData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Diversity GIS-Editor ähnelt.
        /// </summary>
        public static string InfoLabelTitle {
            get {
                return ResourceManager.GetString("InfoLabelTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Version: ähnelt.
        /// </summary>
        public static string InfoLabelVersion {
            get {
                return ResourceManager.GetString("InfoLabelVersion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 0.0.0.0 ähnelt.
        /// </summary>
        public static string InfoLabelVersionData {
            get {
                return ResourceManager.GetString("InfoLabelVersionData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die http://www.gnu.org/license/gpl.html ähnelt.
        /// </summary>
        public static string InfoLinkGnuGpl {
            get {
                return ResourceManager.GetString("InfoLinkGnuGpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die http://www.snsb.info/ ähnelt.
        /// </summary>
        public static string InfoLinkSnsbInfo {
            get {
                return ResourceManager.GetString("InfoLinkSnsbInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select description attributes, e.g.: ähnelt.
        /// </summary>
        public static string LabelSelectAttribute {
            get {
                return ResourceManager.GetString("LabelSelectAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Separator string: ähnelt.
        /// </summary>
        public static string LabelSeparatorString {
            get {
                return ResourceManager.GetString("LabelSeparatorString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select Attributes ähnelt.
        /// </summary>
        public static string SelectAttributeTitle {
            get {
                return ResourceManager.GetString("SelectAttributeTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Frame: ähnelt.
        /// </summary>
        public static string SettingsCheckBoxAreaFrame {
            get {
                return ResourceManager.GetString("SettingsCheckBoxAreaFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Get altitude from Geonames server ähnelt.
        /// </summary>
        public static string SettingsCheckBoxGetAltitude {
            get {
                return ResourceManager.GetString("SettingsCheckBoxGetAltitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Track GPS data when active ähnelt.
        /// </summary>
        public static string SettingsCheckBoxGpsTrack {
            get {
                return ResourceManager.GetString("SettingsCheckBoxGpsTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Glopus Calibration File (.kal) ähnelt.
        /// </summary>
        public static string SettingsCheckBoxImageFileFormatGlopus {
            get {
                return ResourceManager.GetString("SettingsCheckBoxImageFileFormatGlopus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Image XML Coordinates File (.xml) ähnelt.
        /// </summary>
        public static string SettingsCheckBoxImageFileFormatXml {
            get {
                return ResourceManager.GetString("SettingsCheckBoxImageFileFormatXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Working Area as a screen shot (.png) ähnelt.
        /// </summary>
        public static string SettingsCheckBoxSaveWorkingArea {
            get {
                return ResourceManager.GetString("SettingsCheckBoxSaveWorkingArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ArcView shape file (.shp, .shx, .dbf) ähnelt.
        /// </summary>
        public static string SettingsCheckBoxShapeFileFormatArcView {
            get {
                return ResourceManager.GetString("SettingsCheckBoxShapeFileFormatArcView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TAB separated text file (.shp2) ähnelt.
        /// </summary>
        public static string SettingsCheckBoxShapeFileFormatImport {
            get {
                return ResourceManager.GetString("SettingsCheckBoxShapeFileFormatImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MS SQL GeoObjects (.shp1) ähnelt.
        /// </summary>
        public static string SettingsCheckBoxShapeFileFormatSQL {
            get {
                return ResourceManager.GetString("SettingsCheckBoxShapeFileFormatSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Split shapes into single samples ähnelt.
        /// </summary>
        public static string SettingsCheckBoxSplitShapes {
            get {
                return ResourceManager.GetString("SettingsCheckBoxSplitShapes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Altitude for GeoObjects: ähnelt.
        /// </summary>
        public static string SettingsLabelAltitude {
            get {
                return ResourceManager.GetString("SettingsLabelAltitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Baudrate ähnelt.
        /// </summary>
        public static string SettingsLabelBaudrate {
            get {
                return ResourceManager.GetString("SettingsLabelBaudrate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Frame: ähnelt.
        /// </summary>
        public static string SettingsLabelFrame {
            get {
                return ResourceManager.GetString("SettingsLabelFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GPS: ähnelt.
        /// </summary>
        public static string SettingsLabelGps {
            get {
                return ResourceManager.GetString("SettingsLabelGps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GPS Track: ähnelt.
        /// </summary>
        public static string SettingsLabelGpsTrack {
            get {
                return ResourceManager.GetString("SettingsLabelGpsTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Height ähnelt.
        /// </summary>
        public static string SettingsLabelHeight {
            get {
                return ResourceManager.GetString("SettingsLabelHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Image coordinates in following file formats: ähnelt.
        /// </summary>
        public static string SettingsLabelImageCoordFileFormats {
            get {
                return ResourceManager.GetString("SettingsLabelImageCoordFileFormats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Point: ähnelt.
        /// </summary>
        public static string SettingsLabelPoints {
            get {
                return ResourceManager.GetString("SettingsLabelPoints", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Symbol ähnelt.
        /// </summary>
        public static string SettingsLabelPointSymbol {
            get {
                return ResourceManager.GetString("SettingsLabelPointSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Size ähnelt.
        /// </summary>
        public static string SettingsLabelPointSymbolSize {
            get {
                return ResourceManager.GetString("SettingsLabelPointSymbolSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opacity of switched off objects: ähnelt.
        /// </summary>
        public static string SettingsLabelSampleOffTransparency {
            get {
                return ResourceManager.GetString("SettingsLabelSampleOffTransparency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save Shapes in following file formats: ähnelt.
        /// </summary>
        public static string SettingsLabelShapeFileFormats {
            get {
                return ResourceManager.GetString("SettingsLabelShapeFileFormats", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Format of ArvView Shapes input files: ähnelt.
        /// </summary>
        public static string SettingsLabelShapeFileReadFormat {
            get {
                return ResourceManager.GetString("SettingsLabelShapeFileReadFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Stroke Thickness: ähnelt.
        /// </summary>
        public static string SettingsLabelStrokeThickness {
            get {
                return ResourceManager.GetString("SettingsLabelStrokeThickness", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hemisphere (N/S): ähnelt.
        /// </summary>
        public static string SettingsLabelUtmHemi {
            get {
                return ResourceManager.GetString("SettingsLabelUtmHemi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UTM zone (1-60): ähnelt.
        /// </summary>
        public static string SettingsLabelUtmZone {
            get {
                return ResourceManager.GetString("SettingsLabelUtmZone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die MapMode-Viewer: ähnelt.
        /// </summary>
        public static string SettingsLabelViewer {
            get {
                return ResourceManager.GetString("SettingsLabelViewer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Width ähnelt.
        /// </summary>
        public static string SettingsLabelWidth {
            get {
                return ResourceManager.GetString("SettingsLabelWidth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Working Area: ähnelt.
        /// </summary>
        public static string SettingsLabelWorkingArea {
            get {
                return ResourceManager.GetString("SettingsLabelWorkingArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Geographic / GK ähnelt.
        /// </summary>
        public static string SettingsRadioButtonShapeGeo {
            get {
                return ResourceManager.GetString("SettingsRadioButtonShapeGeo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die UTM ähnelt.
        /// </summary>
        public static string SettingsRadioButtonUTM {
            get {
                return ResourceManager.GetString("SettingsRadioButtonUTM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GIS Editor Settings ähnelt.
        /// </summary>
        public static string SettingsTitle {
            get {
                return ResourceManager.GetString("SettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting shapes, please wait... ähnelt.
        /// </summary>
        public static string StrDeletingShapesInstruction {
            get {
                return ResourceManager.GetString("StrDeletingShapesInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Distance: {0}  ähnelt.
        /// </summary>
        public static string StrDistance {
            get {
                return ResourceManager.GetString("StrDistance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Left / right mouse button to set / clear point, &apos;next&gt;&apos; to switch line ähnelt.
        /// </summary>
        public static string StrDrawLineModeInstruction {
            get {
                return ResourceManager.GetString("StrDrawLineModeInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Left / right mouse button to set / clear point, &apos;next&gt;&apos; to switch area ähnelt.
        /// </summary>
        public static string StrDrawPolygonModeInstruction {
            get {
                return ResourceManager.GetString("StrDrawPolygonModeInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Left / right mouse button to set / clear object ähnelt.
        /// </summary>
        public static string StrDrawSamplePointsModeInstruction {
            get {
                return ResourceManager.GetString("StrDrawSamplePointsModeInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Catch corner of shape/image and press left mouse button to move it ähnelt.
        /// </summary>
        public static string StrEditSamplesModeInstruction {
            get {
                return ResourceManager.GetString("StrEditSamplesModeInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die GPS: Sats: {0}  Lon = {1}  Lat = {2}  Alt = {3} ähnelt.
        /// </summary>
        public static string StrGpsInfo {
            get {
                return ResourceManager.GetString("StrGpsInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading shapes, please wait... ähnelt.
        /// </summary>
        public static string StrLoadingShapesInstruction {
            get {
                return ResourceManager.GetString("StrLoadingShapesInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All points are set, change last position or click on other map to adapt ähnelt.
        /// </summary>
        public static string StrMapAdaptModeEndInstruction {
            get {
                return ResourceManager.GetString("StrMapAdaptModeEndInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Left mouse button to set or change source/destination position on map ähnelt.
        /// </summary>
        public static string StrMapAdaptModeSetInstruction {
            get {
                return ResourceManager.GetString("StrMapAdaptModeSetInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust the map and press Add or Save, or Load to get a map from file ähnelt.
        /// </summary>
        public static string StrMapServerModeInstruction {
            get {
                return ResourceManager.GetString("StrMapServerModeInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select image or geometry objects file ähnelt.
        /// </summary>
        public static string StrOpenFileDialog {
            get {
                return ResourceManager.GetString("StrOpenFileDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Capturing map ... ähnelt.
        /// </summary>
        public static string StrProgressCaptureMap {
            get {
                return ResourceManager.GetString("StrProgressCaptureMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Removing GeoObjects ... ähnelt.
        /// </summary>
        public static string StrProgressRemovingSamples {
            get {
                return ResourceManager.GetString("StrProgressRemovingSamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Saving GeoObjects ... ähnelt.
        /// </summary>
        public static string StrProgressSavingShape {
            get {
                return ResourceManager.GetString("StrProgressSavingShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selecting GeoObjects ... ähnelt.
        /// </summary>
        public static string StrProgressSelectingSamples {
            get {
                return ResourceManager.GetString("StrProgressSelectingSamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reading samples from file ähnelt.
        /// </summary>
        public static string StrReadingSamplesFromFile {
            get {
                return ResourceManager.GetString("StrReadingSamplesFromFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select a file name for the image ähnelt.
        /// </summary>
        public static string StrSaveImageDialog {
            get {
                return ResourceManager.GetString("StrSaveImageDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select a file name for the geometry objects ähnelt.
        /// </summary>
        public static string StrSaveShapeDialog {
            get {
                return ResourceManager.GetString("StrSaveShapeDialog", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Press left mouse button to shift or use slider to zoom working area ähnelt.
        /// </summary>
        public static string StrShiftCanvasModeInstruction {
            get {
                return ResourceManager.GetString("StrShiftCanvasModeInstruction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Show samples? ähnelt.
        /// </summary>
        public static string StrShowSamples {
            get {
                return ResourceManager.GetString("StrShowSamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Opacity ähnelt.
        /// </summary>
        public static string StrTransparency {
            get {
                return ResourceManager.GetString("StrTransparency", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  km ähnelt.
        /// </summary>
        public static string StrUnitKm {
            get {
                return ResourceManager.GetString("StrUnitKm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die  m ähnelt.
        /// </summary>
        public static string StrUnitM {
            get {
                return ResourceManager.GetString("StrUnitM", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please wait until map is complete, then press YES.
        ///The results should be shown within 10 seconds.
        ///If no online map can be shown, press NO and load
        ///a local map from your computer, if available. ähnelt.
        /// </summary>
        public static string StrWaitForMap {
            get {
                return ResourceManager.GetString("StrWaitForMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zoom ähnelt.
        /// </summary>
        public static string StrZoom {
            get {
                return ResourceManager.GetString("StrZoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add current map or shape to sample list. ähnelt.
        /// </summary>
        public static string ttButtonAdd {
            get {
                return ResourceManager.GetString("ttButtonAdd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete all samples of the sample list, except the reference map. ähnelt.
        /// </summary>
        public static string ttButtonDeleteAll {
            get {
                return ResourceManager.GetString("ttButtonDeleteAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detect samples within a georeferenced picture. ähnelt.
        /// </summary>
        public static string ttButtonDetection {
            get {
                return ResourceManager.GetString("ttButtonDetection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Detects and starts your GPS receiver, if available.\r\nA supported baud rate must be selected in the Settings menu. ähnelt.
        /// </summary>
        public static string ttButtonGps {
            get {
                return ResourceManager.GetString("ttButtonGps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Load a map or a shape from file. ähnelt.
        /// </summary>
        public static string ttButtonLoad {
            get {
                return ResourceManager.GetString("ttButtonLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Press to finish the current area or line and add another one. ähnelt.
        /// </summary>
        public static string ttButtonMultiShape {
            get {
                return ResourceManager.GetString("ttButtonMultiShape", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Print current working area. ähnelt.
        /// </summary>
        public static string ttButtonPrint {
            get {
                return ResourceManager.GetString("ttButtonPrint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Press the button to cancel the current task (e.g. saving). ähnelt.
        /// </summary>
        public static string ttButtonProgressCancel {
            get {
                return ResourceManager.GetString("ttButtonProgressCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Save current Google map to file and add it to sample list.\r\nSave all visible shapes from sample list to file. ähnelt.
        /// </summary>
        public static string ttButtonSave {
            get {
                return ResourceManager.GetString("ttButtonSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open a window to adjust specific settings of the editor. ähnelt.
        /// </summary>
        public static string ttButtonSettings {
            get {
                return ResourceManager.GetString("ttButtonSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Gives a preview of the Point symbol. ähnelt.
        /// </summary>
        public static string ttCanvasPointSymbols {
            get {
                return ResourceManager.GetString("ttCanvasPointSymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select to show a frame which region of the working area should be saved. ähnelt.
        /// </summary>
        public static string ttCheckBoxAreaFrame {
            get {
                return ResourceManager.GetString("ttCheckBoxAreaFrame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check to change the fill color or transparency of the current sample. ähnelt.
        /// </summary>
        public static string ttCheckBoxFill {
            get {
                return ResourceManager.GetString("ttCheckBoxFill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select to get the altitude for all given object points by contacting the Geonames.org server.\r\nATTENTION: When saving huge objects with many points this will be time consuming,\r\nbecause for each point a web request for the altitude must be sent! ähnelt.
        /// </summary>
        public static string ttCheckBoxGetAltitude {
            get {
                return ResourceManager.GetString("ttCheckBoxGetAltitude", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select to save image coordinates (e.g. maps) in a Glopus calibration file. ähnelt.
        /// </summary>
        public static string ttCheckBoxImageFileFormatGlopus {
            get {
                return ResourceManager.GetString("ttCheckBoxImageFileFormatGlopus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select to save image coordinates in DiversityMobile XML format.\r\nNOTE: This selection is mandatory and cannot be changed at the moment. ähnelt.
        /// </summary>
        public static string ttCheckBoxImageFileFormatXml {
            get {
                return ResourceManager.GetString("ttCheckBoxImageFileFormatXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select to save also the working area including all visible objects as a screen shot when pressing the Save button. ähnelt.
        /// </summary>
        public static string ttCheckBoxSaveWorkingArea {
            get {
                return ResourceManager.GetString("ttCheckBoxSaveWorkingArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select to save the visible shapes in ArcView compatible shape files.\r\nAn appropriate index and dBase file will be created, too. ähnelt.
        /// </summary>
        public static string ttCheckBoxShapeFileFormatArcView {
            get {
                return ResourceManager.GetString("ttCheckBoxShapeFileFormatArcView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select to save the visible shapes in a TAB separated text file, which could be imported later on by appropriate Applications. ähnelt.
        /// </summary>
        public static string ttCheckBoxShapeFileFormatImport {
            get {
                return ResourceManager.GetString("ttCheckBoxShapeFileFormatImport", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select to save the visible shapes in MS SQL GeoObject files (ASCII). ähnelt.
        /// </summary>
        public static string ttCheckBoxShapeFileFormatSQL {
            get {
                return ResourceManager.GetString("ttCheckBoxShapeFileFormatSQL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Check to change the stroke color or transparency of the current sample. ähnelt.
        /// </summary>
        public static string ttCheckBoxStroke {
            get {
                return ResourceManager.GetString("ttCheckBoxStroke", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a color of the list for the current sample. ähnelt.
        /// </summary>
        public static string ttComboBoxBrushes {
            get {
                return ResourceManager.GetString("ttComboBoxBrushes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List of available GPS baudrates. Select one appropriate rate for your GPS device. ähnelt.
        /// </summary>
        public static string ttComboBoxGpsBaudrates {
            get {
                return ResourceManager.GetString("ttComboBoxGpsBaudrates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die List of available Point symbols. Click on a name to select it. ähnelt.
        /// </summary>
        public static string ttComboBoxPointSymbols {
            get {
                return ResourceManager.GetString("ttComboBoxPointSymbols", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays the current value of thePoint symbol size. ähnelt.
        /// </summary>
        public static string ttLabelPointSymbolSizeValue {
            get {
                return ResourceManager.GetString("ttLabelPointSymbolSizeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays the current value of the opacity of switched off objects. ähnelt.
        /// </summary>
        public static string ttLabelSampleOffTransparencySampleValue {
            get {
                return ResourceManager.GetString("ttLabelSampleOffTransparencySampleValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays the current value of the Area stroke thickness. ähnelt.
        /// </summary>
        public static string ttLabelStrokeThicknessAreaValue {
            get {
                return ResourceManager.GetString("ttLabelStrokeThicknessAreaValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays the current value of the Line stroke thickness. ähnelt.
        /// </summary>
        public static string ttLabelStrokeThicknessLineValue {
            get {
                return ResourceManager.GetString("ttLabelStrokeThicknessLineValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Displays the current value of the Point stroke thickness. ähnelt.
        /// </summary>
        public static string ttLabelStrokeThicknessPointValue {
            get {
                return ResourceManager.GetString("ttLabelStrokeThicknessPointValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indicates the progress of a time consuming task in %. ähnelt.
        /// </summary>
        public static string ttProgressBarSaveSamples {
            get {
                return ResourceManager.GetString("ttProgressBarSaveSamples", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adapt the coordinates of the currently loaded map using the reference background map \r\nby clicking 3 reference points alternatingly on both maps. \r\nA final click places the current map to the right position. ähnelt.
        /// </summary>
        public static string ttRadioButtonAdapt {
            get {
                return ResourceManager.GetString("ttRadioButtonAdapt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Draw an area (polygon) by clicking the points with left mouse button. ähnelt.
        /// </summary>
        public static string ttRadioButtonArea {
            get {
                return ResourceManager.GetString("ttRadioButtonArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move corner points of all visible samples by catch and drag them with the cursor. ähnelt.
        /// </summary>
        public static string ttRadioButtonEdit {
            get {
                return ResourceManager.GetString("ttRadioButtonEdit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Draw a line by clicking the points with left mouse button. ähnelt.
        /// </summary>
        public static string ttRadioButtonLine {
            get {
                return ResourceManager.GetString("ttRadioButtonLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Connect to Google map service to get a map of your region. ähnelt.
        /// </summary>
        public static string ttRadioButtonMap {
            get {
                return ResourceManager.GetString("ttRadioButtonMap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Draw sampling objects by clicking the points with left mouse button. ähnelt.
        /// </summary>
        public static string ttRadioButtonObjects {
            get {
                return ResourceManager.GetString("ttRadioButtonObjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shift drawing area pressing left mouse button \r\nor zoom area by using the slider. ähnelt.
        /// </summary>
        public static string ttRadioButtonShift {
            get {
                return ResourceManager.GetString("ttRadioButtonShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selects Google Maps as online map service. ähnelt.
        /// </summary>
        public static string ttSettingsRadioButtonGoogle {
            get {
                return ResourceManager.GetString("ttSettingsRadioButtonGoogle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selects Open Street Maps as online map service. ähnelt.
        /// </summary>
        public static string ttSettingsRadioButtonOsm {
            get {
                return ResourceManager.GetString("ttSettingsRadioButtonOsm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust the symbol size of Point objects.\r\nDouble-click to reset to default value. ähnelt.
        /// </summary>
        public static string ttSettingsSliderPointSymbolSize {
            get {
                return ResourceManager.GetString("ttSettingsSliderPointSymbolSize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust the opacity of switched off objects.\r\nDouble-click to reset to default value. ähnelt.
        /// </summary>
        public static string ttSettingsSliderSampleOffTransparencySample {
            get {
                return ResourceManager.GetString("ttSettingsSliderSampleOffTransparencySample", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust the stroke thickness of Area objects.\r\nDouble-click to reset to default value. ähnelt.
        /// </summary>
        public static string ttSettingsSliderStrokeThicknessArea {
            get {
                return ResourceManager.GetString("ttSettingsSliderStrokeThicknessArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust the stroke thickness of Line objects.\r\nDouble-click to reset to default value. ähnelt.
        /// </summary>
        public static string ttSettingsSliderStrokeThicknessLine {
            get {
                return ResourceManager.GetString("ttSettingsSliderStrokeThicknessLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Adjust the stroke thickness of Point objects.\r\nDouble-click to reset to default value. ähnelt.
        /// </summary>
        public static string ttSettingsSliderStrokeThicknessPoint {
            get {
                return ResourceManager.GetString("ttSettingsSliderStrokeThicknessPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Zoom function when in Shift mode, transparency function when in other modes.\r\nDouble-click to reset to default value. ähnelt.
        /// </summary>
        public static string ttSliderZoom {
            get {
                return ResourceManager.GetString("ttSliderZoom", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Height of the working area region to be saved. ähnelt.
        /// </summary>
        public static string ttTextBoxHeight {
            get {
                return ResourceManager.GetString("ttTextBoxHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Width of the working area region to be saved. ähnelt.
        /// </summary>
        public static string ttTextBoxWidth {
            get {
                return ResourceManager.GetString("ttTextBoxWidth", resourceCulture);
            }
        }
    }
}
